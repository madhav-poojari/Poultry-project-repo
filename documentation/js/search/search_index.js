var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.43,1,2.201]],["body/controllers/AppController.html",[0,2.328,1,3.583,2,1.747,3,0.391,4,0.344,5,0.344,6,3.696,7,0.653,8,2.16,9,5.184,10,1.624,11,0.028,12,0.906,13,4.39,14,1.747,15,1.209,16,0.605,17,1.053,18,3.22,19,3.696,20,0.391,21,0.081,22,3.239,23,1.51,24,1.624,25,4.39,26,0.022,27,0.022]],["title/modules/AppModule.html",[28,1.233,29,2.201]],["body/modules/AppModule.html",[1,3.493,2,1.867,3,0.312,4,0.274,5,0.274,11,0.028,16,0.702,17,0.84,18,3.315,19,2.947,20,0.312,21,0.065,26,0.019,27,0.019,28,1.957,29,4.322,30,1.622,31,1.622,32,1.912,33,1.912,34,1.622,35,2.891,36,1.912,37,2.947,38,2.947,39,2.947,40,3.628,41,3.628,42,3.046,43,2.563,44,1.912,45,1.912,46,3.5,47,2.805,48,3.5,49,3.5,50,2.31,51,1.294,52,1.622,53,3.5,54,3.5,55,3.5,56,3.5,57,3.5,58,3.5]],["title/injectables/AppService.html",[18,1.822,59,0.994]],["body/injectables/AppService.html",[3,0.406,4,0.357,5,0.357,7,0.679,8,2.212,9,5.254,11,0.027,12,0.942,14,1.816,15,1.238,16,0.509,17,1.095,18,3.037,20,0.406,21,0.085,24,1.688,26,0.023,27,0.023,59,1.657,60,2.291,61,3.842,62,4.563,63,4.563,64,4.563,65,4.563]],["title/modules/AuthModule.html",[28,1.233,52,1.545]],["body/modules/AuthModule.html",[2,1.419,3,0.317,4,0.279,5,0.279,11,0.028,16,0.68,17,0.855,20,0.317,21,0.066,26,0.019,27,0.019,28,1.975,30,1.652,31,1.652,32,1.948,33,1.948,34,1.652,35,2.917,36,2.917,42,1.79,43,2.594,44,1.948,45,1.948,47,2.132,52,2.967,66,3.001,67,3.001,68,3.001,69,2.259,70,3.332,71,3.565,72,4.749,73,1.948,74,4.749,75,2.63,76,3.565,77,3.001,78,3.001,79,3.565,80,3.565,81,1.79,82,3.565,83,4.749,84,3.565,85,3.565,86,3.565,87,3.565]],["title/injectables/AuthService.html",[59,0.994,69,1.147]],["body/injectables/AuthService.html",[3,0.328,4,0.289,5,0.289,7,0.549,8,1.933,11,0.028,12,1.003,14,1.468,16,0.687,17,0.885,20,0.328,21,0.068,22,2.723,24,1.365,26,0.02,27,0.02,59,1.448,60,1.853,69,1.671,73,2.016,81,1.853,88,3.107,89,2.517,90,4.859,91,1.583,92,3.69,93,4.066,94,3.69,95,2.084,96,1.448,97,0.928,98,2.084,99,4.859,100,2.573,101,3.69,102,2.439,103,1.71,104,3.69,105,3.69,106,2.906,107,3.107,108,2.906,109,1.181,110,3.107,111,2.723,112,3.69,113,2.016,114,3.69,115,3.69]],["title/classes/CreateShedDto.html",[21,0.062,116,1.822]],["body/classes/CreateShedDto.html",[3,0.299,4,0.263,5,0.263,7,0.499,10,2.217,11,0.027,12,1.237,15,1.238,16,0.374,20,0.299,21,0.085,23,2.303,26,0.019,27,0.019,96,1.544,97,1.145,116,2.492,117,1.155,118,5.163,119,2.478,120,1.687,121,4.362,122,4.362,123,4.362,124,2.222,125,2.222,126,3.366,127,5.181,128,3.358,129,2.777,130,3.35,131,3.358,132,2.918,133,3.358,134,3.358,135,3.358,136,3.358,137,1.686,138,1.686,139,1.556]],["title/classes/CreateTransactionDto.html",[21,0.062,140,1.822]],["body/classes/CreateTransactionDto.html",[3,0.286,4,0.251,5,0.251,7,0.477,10,2.24,11,0.027,12,1.251,15,1.375,16,0.358,20,0.286,21,0.082,23,2.312,26,0.018,27,0.018,97,1.157,117,1.104,120,1.635,124,2.17,125,2.17,129,2.739,130,3.31,132,3.145,137,1.611,138,1.611,139,1.487,140,2.416,141,5.197,142,2.368,143,4.26,144,3.34,145,4.26,146,4.26,147,4.26,148,3.209,149,3.209,150,3.209,151,3.209,152,3.209,153,3.209,154,3.209]],["title/classes/CreateUserDto.html",[21,0.062,155,1.822]],["body/classes/CreateUserDto.html",[3,0.274,4,0.241,5,0.241,7,0.458,10,2.26,11,0.028,12,1.261,15,1.4,16,0.344,20,0.274,21,0.08,23,2.303,26,0.018,27,0.018,97,1.167,113,2.705,117,1.06,120,1.59,124,2.124,125,2.124,129,2.705,130,3.273,132,3.068,137,2.486,138,1.547,139,1.427,155,2.349,156,5.227,157,2.034,158,2.705,159,4.169,160,4.169,161,2.705,162,4.169,163,3.081,164,2.594,165,3.081,166,2.594,167,3.081,168,3.081,169,3.081,170,3.081,171,3.081,172,2.594]],["title/interfaces/JwtPayload.html",[106,1.994,173,2.46]],["body/interfaces/JwtPayload.html",[3,0.411,4,0.362,5,0.362,7,0.687,11,0.027,15,1.453,20,0.411,26,0.023,27,0.023,97,1.069,106,3.349,111,4.623,113,3.423,120,2.071,173,3.407,174,3.888,175,3.888,176,3.888]],["title/injectables/JwtStrategy.html",[59,0.994,70,1.822]],["body/injectables/JwtStrategy.html",[3,0.333,4,0.293,5,0.293,11,0.028,12,0.772,16,0.672,17,0.897,20,0.333,21,0.069,22,2.758,24,1.382,26,0.02,27,0.02,59,1.461,60,1.876,69,2.126,70,2.677,75,2.758,77,3.147,81,2.46,89,1.732,91,1.603,95,1.603,96,1.114,97,0.714,98,1.603,100,2.345,106,2.93,107,3.147,109,1.197,177,3.147,178,3.738,179,3.738,180,3.615,181,3.738,182,3.738,183,3.738,184,3.147,185,2.467,186,3.738,187,3.738,188,3.738,189,3.738,190,3.738,191,3.738,192,3.738,193,3.738,194,1.876,195,3.738,196,2.042,197,1.876]],["title/classes/LoginDto.html",[21,0.062,198,2.46]],["body/classes/LoginDto.html",[3,0.413,4,0.363,5,0.363,7,0.689,11,0.027,12,1.159,15,1.397,20,0.413,21,0.086,26,0.023,27,0.023,97,1.072,117,1.595,120,2.076,158,3.298,161,3.298,198,4.142,199,3.904,200,4.637,201,4.637]],["title/classes/LoginUserDto.html",[21,0.062,202,2.201]],["body/classes/LoginUserDto.html",[3,0.374,4,0.329,5,0.329,7,0.624,10,1.953,11,0.027,12,1.09,15,1.35,16,0.468,20,0.374,21,0.098,23,2.193,26,0.022,27,0.022,97,1.008,117,1.444,120,1.953,132,2.651,137,2.9,138,2.108,139,1.945,157,2.772,158,3.155,161,3.155,164,3.535,166,3.535,172,3.535,202,3.485,203,4.863,204,4.199]],["title/guards/RolesGuard.html",[205,2.46,206,1.674]],["body/guards/RolesGuard.html",[3,0.288,4,0.253,5,0.253,7,0.481,8,1.77,11,0.028,12,0.918,14,1.288,16,0.567,17,0.776,20,0.288,21,0.06,23,1.53,24,1.645,26,0.018,27,0.018,59,1.326,73,1.768,81,1.625,91,1.908,93,4.008,95,1.908,96,1.326,97,0.849,98,1.908,109,1.837,126,3.282,180,2.388,196,1.768,197,1.625,206,2.233,207,3.236,208,2.724,209,5.472,210,3.236,211,5.928,212,3.236,213,4.448,214,5.472,215,3.236,216,3.236,217,2.388,218,3.236,219,2.233,220,4.448,221,3.236,222,2.43,223,3.236,224,1.768,225,2.136,226,3.236,227,3.236,228,2.388,229,3.236,230,4.279,231,3.236,232,2.724,233,1.625,234,4.448,235,3.236,236,3.236,237,3.236,238,3.236,239,3.236,240,3.236,241,3.236,242,1.625,243,1.625,244,2.724]],["title/classes/Shed.html",[21,0.062,245,1.674]],["body/classes/Shed.html",[3,0.32,4,0.282,5,0.282,7,0.535,10,2.262,11,0.028,12,1.262,15,1.273,16,0.401,20,0.425,21,0.067,26,0.02,27,0.02,51,1.331,96,1.599,97,1.168,109,1.152,117,1.238,120,1.767,121,4.517,122,4.517,123,4.517,124,2.301,125,2.301,126,3.526,129,2.834,245,2.399,246,2.655,247,4.88,248,3.598,249,3.598,250,3.598,251,3.598,252,3.598,253,3.598,254,2.611,255,2.655,256,2.375,257,3.029]],["title/controllers/ShedController.html",[0,1.43,258,2.201]],["body/controllers/ShedController.html",[0,0.649,2,0.602,3,0.135,4,0.119,5,0.119,7,0.225,8,0.993,10,1.72,11,0.028,12,0.96,14,1.851,15,1.122,16,0.562,17,0.363,20,0.135,21,0.028,23,1.271,24,2.047,26,0.01,27,0.01,69,1.095,73,0.827,81,1.253,89,2.801,91,0.649,93,2.102,95,1.995,96,1.387,97,0.705,98,1.995,100,1.07,102,1.253,103,1.156,109,1.826,116,2.542,194,2.53,206,0.76,219,1.855,222,2.233,224,1.363,225,2.438,228,3.246,233,2.208,242,2.208,243,1.253,245,2.779,258,1.647,259,1.274,260,1.116,261,2.495,262,1.841,263,1.841,264,2.495,265,2.495,266,2.495,267,2.681,268,1.513,269,2.349,270,1.513,271,4.01,272,3.246,273,1.116,274,2.681,275,1.274,276,1.513,277,1.116,278,1.274,279,1.274,280,1.513,281,1.513,282,1.274,283,1.841,284,1.513,285,1.513,286,2.681,287,1.274,288,1.513,289,1.513,290,2.101,291,1.513,292,1.513,293,2.908,294,1.116,295,1.513,296,2.726,297,2.349,298,1.841,299,1.116,300,1.116,301,1.116,302,2.681,303,1.116,304,1.116,305,0.827,306,1.74,307,1.274,308,0.827,309,1.841,310,1.116,311,0.999,312,0.827,313,1.513,314,1.513,315,1.274,316,0.701,317,1.513,318,2.495,319,1.513,320,1.116,321,3.433,322,1.841,323,2.349,324,3.433,325,1.116,326,1.116,327,1.116,328,1.116,329,2.726,330,2.726,331,1.116,332,2.349,333,2.101,334,1.513,335,3.015,336,1.116,337,3.015,338,1.513,339,1.116,340,1.513,341,2.726,342,2.726,343,1.116,344,4.862,345,1.513,346,1.116,347,2.018,348,1.513,349,2.101,350,3.441,351,2.101,352,2.101,353,2.101,354,1.513,355,1.274,356,1.274,357,1.841,358,1.513,359,1.513,360,1.116,361,1.513,362,1.513,363,1.116,364,1.116,365,1.116,366,2.101,367,1.513]],["title/modules/ShedModule.html",[28,1.233,40,1.994]],["body/modules/ShedModule.html",[2,1.929,3,0.327,4,0.288,5,0.288,11,0.028,16,0.7,17,0.882,20,0.327,21,0.068,26,0.02,27,0.02,28,2.006,30,1.704,31,1.704,32,2.01,33,2.01,34,1.704,35,2.963,36,2.01,40,3.889,42,3.008,43,2.649,44,2.01,45,2.01,47,2.2,50,2.428,51,1.36,52,2.776,78,3.097,96,1.096,245,1.847,254,2.01,256,3.2,258,3.58,306,3.362,307,3.097,368,3.097,369,3.097,370,3.678,371,3.678,372,3.678,373,2.714,374,2.714,375,3.678]],["title/injectables/ShedService.html",[59,0.994,306,1.822]],["body/injectables/ShedService.html",[3,0.178,4,0.157,5,0.157,7,0.298,8,1.244,11,0.028,12,1.113,14,2.074,15,1.234,16,0.581,17,0.481,20,0.178,21,0.037,23,0.689,24,1.994,26,0.013,27,0.013,51,0.741,59,0.932,60,1.006,69,0.689,89,2.938,91,1.341,95,2.236,96,1.554,97,0.995,98,2.236,102,3.02,109,1.598,116,2.573,124,0.859,125,0.859,129,2.312,194,2.364,196,2.726,197,2.707,219,1.006,224,1.094,233,1.569,242,1.569,243,1.93,245,2.845,267,3.236,274,3.965,293,3.224,305,1.094,306,1.708,308,1.094,309,2.306,312,1.094,316,1.448,333,3.236,347,2.726,366,3.236,376,1.686,377,3.126,378,4.342,379,3.126,380,3.126,381,3.126,382,2.003,383,3.204,384,2.003,385,3.126,386,3.126,387,2.003,388,3.126,389,2.003,390,2.003,391,3.126,392,2.003,393,3.126,394,2.003,395,2.003,396,3.126,397,2.003,398,3.126,399,2.003,400,2.003,401,1.478,402,1.478,403,1.478,404,1.686,405,2.003,406,2.003,407,2.003,408,2.003,409,2.003,410,1.478,411,2.003,412,4.342,413,2.003,414,3.126,415,1.686,416,2.003,417,2.003,418,2.003,419,2.003,420,2.003,421,2.003,422,2.003]],["title/classes/Transaction.html",[21,0.062,423,1.822]],["body/classes/Transaction.html",[3,0.308,4,0.271,5,0.271,7,0.514,10,2.285,11,0.028,12,1.275,15,1.399,16,0.386,20,0.414,21,0.064,26,0.019,27,0.019,51,1.279,97,1.18,109,1.107,117,1.19,120,1.721,124,2.256,125,2.256,129,2.801,143,4.428,144,3.472,145,4.428,146,4.428,147,4.428,247,4.902,254,2.542,255,2.552,423,2.542,424,2.552,425,3.458,426,3.458,427,3.458,428,3.458,429,3.458,430,3.458,431,3.458,432,2.283,433,2.912]],["title/controllers/TransactionController.html",[0,1.43,434,2.201]],["body/controllers/TransactionController.html",[0,0.853,2,0.792,3,0.177,4,0.156,5,0.156,7,0.296,8,1.237,10,1.736,11,0.028,12,0.969,14,1.868,15,1.231,16,0.58,17,0.477,20,0.177,21,0.037,23,1.069,24,2.045,26,0.013,27,0.013,69,1.316,89,2.812,91,0.853,95,2.013,96,1.399,97,0.826,98,2.013,102,1.561,109,1.503,140,2.84,194,2.357,206,0.999,219,1.561,222,2.091,225,2.052,233,2.172,242,2.172,243,1.561,245,0.999,260,1.468,262,2.294,263,2.294,269,2.824,271,3.969,272,3.192,273,1.468,275,1.675,277,1.468,278,1.675,279,1.675,283,1.468,287,1.675,294,1.468,296,2.294,297,2.824,298,2.294,299,1.468,300,1.468,301,1.468,303,1.468,304,1.468,305,1.087,308,1.087,310,1.468,311,1.313,312,1.087,316,0.922,320,1.468,321,3.463,322,2.294,323,2.824,324,3.463,325,1.468,326,1.468,327,1.468,328,1.468,329,2.294,330,2.824,331,1.468,332,2.294,335,2.824,336,1.468,337,2.824,339,1.468,341,2.294,342,2.294,343,1.468,346,1.468,347,1.698,357,1.468,360,1.468,363,1.468,364,1.468,365,1.468,423,3.021,434,2.052,435,1.675,436,3.109,437,3.109,438,2.617,439,1.989,440,1.989,441,4.189,442,1.989,443,1.989,444,1.989,445,1.989,446,1.989,447,3.217,448,1.989,449,2.091,450,1.675,451,2.294,452,1.989,453,1.989,454,3.109,455,1.989,456,2.617,457,1.989,458,1.989,459,1.989,460,4.326,461,1.989,462,1.989,463,1.989,464,1.989,465,1.989,466,2.617,467,1.989]],["title/modules/TransactionModule.html",[28,1.233,41,1.994]],["body/modules/TransactionModule.html",[2,1.979,3,0.34,4,0.3,5,0.3,11,0.028,16,0.694,17,0.917,20,0.34,21,0.071,26,0.02,27,0.02,28,2.044,30,1.772,31,1.772,32,2.089,33,2.089,34,1.772,35,3.02,36,2.089,41,3.84,43,2.717,44,2.089,45,2.089,47,2.287,50,2.524,51,1.414,52,2.811,96,1.14,254,2.089,373,2.822,374,2.822,423,2.089,432,3.283,434,3.649,449,3.398,450,3.22,468,3.22,469,3.824,470,3.22,471,3.824,472,3.824,473,3.824]],["title/injectables/TransactionService.html",[59,0.994,449,1.822]],["body/injectables/TransactionService.html",[3,0.21,4,0.185,5,0.185,7,0.351,8,1.41,11,0.028,12,1.099,14,2.017,15,1.294,16,0.616,17,0.566,20,0.21,21,0.044,23,0.811,24,1.874,26,0.015,27,0.015,51,0.872,59,1.056,60,1.184,69,1.899,89,2.904,91,1.519,95,2.174,96,1.511,97,0.968,98,2.174,102,2.971,109,1.514,140,2.769,194,2.135,196,2.324,197,2.544,219,1.778,224,1.288,233,1.184,242,1.184,243,1.184,305,1.288,308,1.288,312,1.288,316,1.641,347,2.324,383,3.489,401,1.74,402,1.74,403,1.74,410,1.74,423,2.583,438,3.581,441,4.267,447,3.397,449,1.935,451,2.613,456,3.581,466,3.581,474,1.986,475,3.542,476,4.729,477,3.542,478,2.358,479,2.358,480,3.542,481,3.542,482,2.358,483,3.542,484,2.358,485,2.358,486,3.542,487,2.358,488,2.358,489,2.358,490,1.986,491,2.358,492,2.358,493,2.358,494,2.358,495,2.358,496,2.358,497,4.254,498,2.358,499,2.358,500,2.358,501,2.358,502,2.358]],["title/classes/UpdateShedDto.html",[21,0.062,293,1.994]],["body/classes/UpdateShedDto.html",[3,0.401,4,0.353,5,0.353,11,0.028,16,0.693,20,0.401,21,0.102,26,0.023,27,0.023,116,2.464,117,1.551,119,3.328,130,2.464,132,2.264,137,2.264,138,2.264,139,2.09,185,2.977,293,3.301,309,3.328,316,2.09,503,3.797,504,3.328,505,2.977,506,2.977,507,3.328,508,2.977,509,4.51]],["title/classes/UpdateTransactionDto.html",[21,0.062,447,1.994]],["body/classes/UpdateTransactionDto.html",[3,0.401,4,0.353,5,0.353,11,0.028,16,0.693,20,0.401,21,0.102,26,0.023,27,0.023,117,1.551,130,2.464,132,2.264,137,2.264,138,2.264,139,2.09,140,2.464,142,3.328,185,2.977,316,2.09,447,3.301,451,3.328,504,3.328,505,2.977,506,2.977,507,3.328,508,2.977,510,3.797,511,4.51]],["title/classes/UpdateUserDto.html",[21,0.062,512,1.994]],["body/classes/UpdateUserDto.html",[3,0.395,4,0.348,5,0.348,11,0.028,16,0.689,20,0.395,21,0.101,26,0.022,27,0.022,109,1.422,113,2.426,117,1.528,130,2.426,132,2.229,137,2.229,138,2.229,139,2.058,155,2.426,157,2.931,185,2.931,316,2.058,504,4.034,505,2.931,506,2.931,507,3.277,508,2.931,512,3.269,513,3.739,514,3.277,515,4.441]],["title/classes/User.html",[21,0.062,100,1.43]],["body/classes/User.html",[3,0.296,4,0.261,5,0.261,7,0.495,10,2.303,11,0.028,12,1.285,15,1.422,16,0.371,20,0.404,21,0.062,26,0.019,27,0.019,51,1.231,97,1.189,100,1.945,109,1.066,113,2.818,117,1.145,120,1.677,124,2.212,125,2.212,129,2.77,158,2.818,159,4.342,160,4.342,161,2.818,162,4.342,247,4.918,254,2.477,255,2.456,516,2.456,517,3.329,518,3.329,519,3.329,520,3.329,521,3.329,522,3.329,523,3.329,524,3.329,525,2.197,526,2.803]],["title/controllers/UsersController.html",[0,1.43,527,2.201]],["body/controllers/UsersController.html",[0,0.57,2,0.529,3,0.118,4,0.104,5,0.104,7,0.198,8,0.891,10,1.703,11,0.028,12,0.951,14,1.833,15,1.068,16,0.568,17,0.319,20,0.118,21,0.025,23,0.998,24,2.038,26,0.009,27,0.009,69,0.998,73,0.726,81,1.124,89,2.789,91,0.57,93,1.916,95,1.975,96,1.373,97,0.726,98,1.975,100,2.364,102,1.124,103,1.037,109,1.834,110,1.119,113,0.726,124,0.57,125,0.96,155,2.396,158,0.726,161,1.223,180,0.98,194,2.558,196,0.726,197,0.667,202,3.04,206,0.667,219,1.457,222,1.861,224,1.223,225,1.916,228,3.041,230,2.443,233,2.201,242,2.201,243,1.124,244,1.119,260,0.98,262,1.652,263,1.652,269,2.141,271,4.003,272,3.235,273,0.98,277,0.98,282,1.119,283,2.141,286,3.47,290,1.119,294,0.98,296,2.513,297,2.513,298,0.98,299,0.98,300,0.98,301,0.98,302,2.443,303,0.98,304,0.98,305,0.726,308,0.726,310,0.98,311,0.877,312,0.726,315,1.119,320,1.652,321,3.398,322,1.652,323,2.805,324,3.537,325,0.98,326,0.98,327,0.98,328,0.98,329,2.141,330,2.513,331,0.98,332,2.141,335,2.805,336,0.98,337,2.805,339,0.98,341,2.141,342,2.141,343,0.98,346,2.141,347,1.861,349,1.885,350,3.47,351,1.885,352,1.885,353,1.885,355,1.119,356,1.119,357,2.141,360,0.98,363,0.98,364,0.98,365,0.98,512,2.754,514,2.141,527,1.478,528,1.119,529,2.239,530,2.239,531,2.239,532,2.239,533,2.239,534,2.443,535,1.329,536,1.329,537,1.329,538,1.329,539,1.329,540,1.329,541,1.329,542,1.329,543,1.329,544,1.329,545,1.329,546,1.329,547,1.329,548,1.329,549,1.329,550,2.239,551,1.329,552,1.329,553,1.329,554,1.329,555,1.329,556,1.119,557,1.119,558,1.329,559,1.329,560,1.329,561,1.329,562,1.329,563,2.239,564,1.329,565,1.329,566,1.329,567,2.239,568,1.329,569,1.329,570,1.329,571,1.329,572,1.329,573,1.329,574,1.329,575,1.329,576,1.329,577,1.329,578,1.329,579,1.329,580,1.329,581,1.329,582,1.329,583,4.606,584,1.329,585,1.329,586,1.329,587,1.329,588,1.329,589,1.329,590,1.329,591,1.329,592,1.329,593,1.329,594,1.885,595,1.329,596,1.885,597,1.329]],["title/modules/UsersModule.html",[28,1.233,42,1.674]],["body/modules/UsersModule.html",[2,1.819,3,0.3,4,0.264,5,0.264,11,0.028,16,0.706,17,0.808,20,0.3,21,0.062,26,0.019,27,0.019,28,1.919,30,1.56,31,1.56,32,1.84,33,1.84,34,1.56,35,2.835,36,2.835,42,3.242,43,2.497,44,1.84,45,1.84,47,2.014,50,2.223,51,1.245,52,2.78,70,3.278,96,1.004,100,1.444,103,3.015,206,2.295,217,2.485,254,1.84,311,2.223,373,2.485,374,2.485,525,3.425,527,3.425,557,2.835,598,2.835,599,2.835,600,3.368,601,2.835,602,3.368,603,3.368,604,4.571,605,3.368,606,3.368,607,3.368]],["title/injectables/UsersService.html",[59,0.994,103,1.545]],["body/injectables/UsersService.html",[3,0.154,4,0.135,5,0.135,7,0.257,8,1.106,11,0.028,12,1.119,14,2.102,15,1.35,16,0.549,17,0.414,20,0.154,21,0.032,23,0.594,24,2.049,26,0.011,27,0.011,51,0.639,59,0.829,60,0.867,69,1.693,89,2.954,91,1.192,95,2.266,96,1.575,97,1.009,98,2.266,100,2.553,102,3.043,103,1.288,108,1.033,109,1.691,111,3.232,124,0.741,125,0.741,129,2.169,155,2.393,158,1.906,161,2.184,194,2.569,196,2.557,197,2.569,219,1.396,224,0.944,233,0.867,242,0.867,243,0.867,305,0.944,308,0.944,312,0.944,316,1.288,347,2.557,383,2.949,401,1.275,402,1.275,403,1.275,410,1.275,415,2.937,512,3.06,514,2.051,534,2.937,594,2.937,596,2.937,608,1.275,609,2.78,610,3.997,611,2.78,612,2.78,613,2.78,614,2.78,615,2.78,616,1.728,617,1.728,618,2.78,619,2.78,620,1.728,621,2.78,622,1.728,623,1.728,624,2.78,625,1.728,626,3.997,627,2.78,628,1.728,629,2.78,630,1.728,631,2.78,632,1.728,633,1.728,634,1.728,635,2.78,636,1.728,637,1.455,638,1.728,639,1.455,640,1.728,641,1.728,642,1.728,643,1.728,644,1.728,645,1.728,646,1.728,647,1.728,648,2.78,649,1.728,650,1.728,651,1.728,652,4.68,653,2.78,654,1.728,655,1.728,656,1.728,657,1.728,658,1.728,659,1.728]],["title/coverage.html",[660,3.35]],["body/coverage.html",[0,2.17,1,1.79,5,0.212,6,2.284,11,0.028,18,1.482,21,0.115,26,0.016,27,0.016,34,1.257,59,1.669,61,2.284,69,0.933,70,1.482,88,2.284,97,0.518,100,1.684,103,1.257,106,1.622,108,1.622,116,1.482,118,2.284,119,2.897,140,1.482,141,2.284,142,2.897,155,1.482,156,2.284,157,3.047,173,3.733,175,2.284,176,2.284,177,2.284,197,1.362,198,2.001,199,2.284,202,1.79,203,2.284,205,2.001,206,1.362,208,2.284,222,1.482,245,1.971,246,2.897,256,1.79,258,1.79,259,2.284,293,1.622,306,1.482,376,2.284,423,2.145,424,2.897,432,1.79,434,1.79,435,2.284,447,1.622,449,1.482,474,2.284,503,2.284,510,2.284,512,1.622,513,2.284,516,2.897,525,1.79,527,1.79,528,2.284,608,2.897,660,2.001,661,2.712,662,2.712,663,2.712,664,6.768,665,4.616,666,5.369,667,2.284,668,5.369,669,6.025,670,2.284,671,2.712,672,5.059,673,2.284,674,5.059,675,5.369,676,2.284,677,2.712,678,2.284,679,2.712,680,2.712,681,2.712]],["title/dependencies.html",[31,1.857,682,2.349]],["body/dependencies.html",[11,0.028,17,1.041,21,0.1,26,0.022,27,0.022,31,2.011,51,1.605,73,2.371,75,3.203,81,2.179,108,2.596,139,2.011,184,3.655,217,3.203,505,2.865,506,2.865,508,2.865,556,3.655,683,5.863,684,4.341,685,4.341,686,4.341,687,4.341,688,4.341,689,4.341,690,4.341,691,4.341,692,4.341,693,4.341,694,4.341,695,4.341,696,4.341,697,4.341,698,4.341,699,4.341]],["title/miscellaneous/functions.html",[700,1.524,701,3.374]],["body/miscellaneous/functions.html",[7,0.763,11,0.024,26,0.024,27,0.024,34,2.919,670,4.319,700,2.803,701,4.319,702,5.13]],["title/index.html",[7,0.415,703,2.79,704,2.79]],["body/index.html",[4,0.293,11,0.027,26,0.02,27,0.02,144,2.467,660,2.758,705,3.738,706,3.738,707,4.9,708,3.738,709,3.738,710,3.738,711,3.738,712,3.738,713,3.738,714,5.466,715,3.738,716,3.738,717,3.738,718,3.738,719,6.299,720,3.738,721,3.738,722,3.738,723,6.181,724,3.738,725,3.738,726,4.9,727,3.738,728,3.738,729,3.738,730,3.738,731,4.9,732,4.9,733,3.738,734,3.738,735,3.738,736,4.9,737,4.9,738,3.738,739,3.738,740,3.738,741,3.738,742,3.738,743,3.147,744,3.738,745,3.738,746,3.738,747,3.738,748,3.738,749,3.738,750,3.738,751,3.738,752,3.738,753,3.738,754,3.147,755,3.738,756,3.738,757,3.738,758,3.738,759,3.738,760,3.738,761,3.147]],["title/modules.html",[30,2.103]],["body/modules.html",[11,0.023,26,0.023,27,0.023,29,3.136,30,2.201,40,2.841,41,2.841,42,2.385,52,2.201,743,5.446,762,6.468,763,6.468,764,6.468]],["title/overview.html",[765,3.822]],["body/overview.html",[2,1.336,11,0.027,18,2.83,26,0.019,27,0.019,28,1.242,29,4.222,30,1.556,31,1.556,32,1.835,33,1.835,34,1.556,35,1.835,36,1.835,37,2.827,38,2.827,39,2.827,40,3.783,41,3.667,42,3.241,43,2.492,44,1.835,45,1.835,52,2.963,60,1.686,66,2.827,67,2.827,68,2.827,69,2.109,70,3.036,103,2.841,117,1.155,174,2.827,205,2.478,232,2.827,306,2.83,368,2.827,369,2.827,449,2.83,468,2.827,470,2.827,598,2.827,599,2.827,601,2.827,765,2.827,766,3.358,767,4.562,768,3.358,769,3.358]],["title/properties.html",[120,1.482,682,2.349]],["body/properties.html",[11,0.027,26,0.024,27,0.024,120,1.872,144,3.342,754,4.263,761,4.263,770,5.063,771,5.063,772,5.063]],["title/miscellaneous/typealiases.html",[700,1.524,773,4.007]],["body/miscellaneous/typealiases.html",[7,0.737,11,0.024,26,0.024,27,0.024,97,0.946,404,4.917,490,4.917,637,4.917,673,4.171,676,4.171,678,4.171,700,2.707,774,4.954,775,4.954,776,4.954,777,4.954]],["title/miscellaneous/variables.html",[700,1.524,778,3.374]],["body/miscellaneous/variables.html",[7,0.65,11,0.027,15,0.974,26,0.022,27,0.022,108,3.239,222,3.359,246,3.227,256,3.575,257,3.682,424,3.227,432,3.575,433,3.682,516,3.227,525,3.575,526,3.682,608,3.227,639,3.682,667,3.682,700,2.389,778,3.682,779,4.374,780,4.374,781,4.374,782,4.374,783,4.374,784,6.32,785,6.32,786,4.374]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginUserDto.html":{},"guards/RolesGuard.html":{},"classes/Shed.html":{},"controllers/ShedController.html":{},"modules/ShedModule.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":771,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":669,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":232,"title":{},"body":{"guards/RolesGuard.html":{},"overview.html":{}}}],["1.2.2",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":769,"title":{},"body":{"overview.html":{}}}],["12",{"_index":645,"title":{},"body":{"injectables/UsersService.html":{}}}],["1d",{"_index":87,"title":{},"body":{"modules/AuthModule.html":{}}}],["4",{"_index":767,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":327,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["5",{"_index":766,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":768,"title":{},"body":{"overview.html":{}}}],["6.3.0",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["access",{"_index":226,"title":{},"body":{"guards/RolesGuard.html":{}}}],["accountant",{"_index":340,"title":{},"body":{"controllers/ShedController.html":{}}}],["accountant')@useguards(rolesguard",{"_index":279,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{}}}],["add",{"_index":573,"title":{},"body":{"controllers/UsersController.html":{}}}],["aliases",{"_index":774,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":744,"title":{},"body":{"index.html":{}}}],["amount",{"_index":143,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/Transaction.html":{}}}],["app",{"_index":721,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":604,"title":{},"body":{"modules/UsersModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":713,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth.service",{"_index":77,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["authmodule",{"_index":52,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShedModule.html":{},"modules/TransactionModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":754,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":69,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":194,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":745,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.hash(createuserdto.password",{"_index":644,"title":{},"body":{"injectables/UsersService.html":{}}}],["body",{"_index":297,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":126,"title":{},"body":{"classes/CreateShedDto.html":{},"guards/RolesGuard.html":{},"classes/Shed.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShedModule.html":{},"modules/TransactionModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":764,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":762,"title":{},"body":{"modules.html":{}}}],["building",{"_index":708,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":209,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":213,"title":{},"body":{"guards/RolesGuard.html":{}}}],["catch",{"_index":242,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["check",{"_index":567,"title":{},"body":{"controllers/UsersController.html":{}}}],["chicken",{"_index":191,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["class",{"_index":21,"title":{"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginUserDto.html":{},"classes/Shed.html":{},"classes/Transaction.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginUserDto.html":{},"guards/RolesGuard.html":{},"classes/Shed.html":{},"controllers/ShedController.html":{},"modules/ShedModule.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":117,"title":{},"body":{"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginUserDto.html":{},"classes/Shed.html":{},"classes/Transaction.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":66,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":67,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":68,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_shedmodule",{"_index":368,"title":{},"body":{"modules/ShedModule.html":{},"overview.html":{}}}],["cluster_shedmodule_imports",{"_index":370,"title":{},"body":{"modules/ShedModule.html":{}}}],["cluster_shedmodule_providers",{"_index":369,"title":{},"body":{"modules/ShedModule.html":{},"overview.html":{}}}],["cluster_transactionmodule",{"_index":468,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cluster_transactionmodule_imports",{"_index":469,"title":{},"body":{"modules/TransactionModule.html":{}}}],["cluster_transactionmodule_providers",{"_index":470,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":598,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":601,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":600,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":599,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["console.log(error",{"_index":410,"title":{},"body":{"injectables/ShedService.html":{},"injectables/TransactionService.html":{},"injectables/UsersService.html":{}}}],["console.log(token",{"_index":578,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(updatesheddto",{"_index":420,"title":{},"body":{"injectables/ShedService.html":{}}}],["console.log(updatetransactiondto",{"_index":500,"title":{},"body":{"injectables/TransactionService.html":{}}}],["console.log(updateuserdto",{"_index":657,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(user",{"_index":587,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(user.password",{"_index":649,"title":{},"body":{"injectables/UsersService.html":{}}}],["const",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"classes/Shed.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":178,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jwtservice",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(reflector",{"_index":210,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(shedmodel",{"_index":382,"title":{},"body":{"injectables/ShedService.html":{}}}],["constructor(transactionmodel",{"_index":478,"title":{},"body":{"injectables/TransactionService.html":{}}}],["constructor(usermodel",{"_index":616,"title":{},"body":{"injectables/UsersService.html":{}}}],["context",{"_index":216,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":223,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":229,"title":{},"body":{"guards/RolesGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('shed",{"_index":314,"title":{},"body":{"controllers/ShedController.html":{}}}],["controller('transaction",{"_index":452,"title":{},"body":{"controllers/TransactionController.html":{}}}],["controller('user",{"_index":561,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/ShedController.html":{},"modules/ShedModule.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":660,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":316,"title":{},"body":{"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["create(createsheddto",{"_index":386,"title":{},"body":{"injectables/ShedService.html":{}}}],["create(createtransactiondto",{"_index":481,"title":{},"body":{"injectables/TransactionService.html":{}}}],["create(createuserdto",{"_index":619,"title":{},"body":{"injectables/UsersService.html":{}}}],["created",{"_index":322,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["createdshed",{"_index":407,"title":{},"body":{"injectables/ShedService.html":{}}}],["createdshed.save",{"_index":409,"title":{},"body":{"injectables/ShedService.html":{}}}],["createdtransaction",{"_index":493,"title":{},"body":{"injectables/TransactionService.html":{}}}],["createdtransaction.save",{"_index":495,"title":{},"body":{"injectables/TransactionService.html":{}}}],["createduser",{"_index":641,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduser.password",{"_index":643,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduser.save",{"_index":646,"title":{},"body":{"injectables/UsersService.html":{}}}],["createshed",{"_index":261,"title":{},"body":{"controllers/ShedController.html":{}}}],["createshed(@res",{"_index":317,"title":{},"body":{"controllers/ShedController.html":{}}}],["createshed(response",{"_index":268,"title":{},"body":{"controllers/ShedController.html":{}}}],["createsheddto",{"_index":116,"title":{"classes/CreateShedDto.html":{}},"body":{"classes/CreateShedDto.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"classes/UpdateShedDto.html":{},"coverage.html":{}}}],["createtransaction",{"_index":436,"title":{},"body":{"controllers/TransactionController.html":{}}}],["createtransaction(@res",{"_index":453,"title":{},"body":{"controllers/TransactionController.html":{}}}],["createtransaction(response",{"_index":439,"title":{},"body":{"controllers/TransactionController.html":{}}}],["createtransactiondto",{"_index":140,"title":{"classes/CreateTransactionDto.html":{}},"body":{"classes/CreateTransactionDto.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/UpdateTransactionDto.html":{},"coverage.html":{}}}],["createuser",{"_index":529,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(@res",{"_index":562,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(response",{"_index":535,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto",{"_index":155,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["credentials",{"_index":576,"title":{},"body":{"controllers/UsersController.html":{}}}],["crypto",{"_index":560,"title":{},"body":{"controllers/UsersController.html":{}}}],["data",{"_index":346,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["dbname",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShedModule.html":{},"modules/TransactionModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decode",{"_index":236,"title":{},"body":{"guards/RolesGuard.html":{}}}],["decodedtoken",{"_index":234,"title":{},"body":{"guards/RolesGuard.html":{}}}],["decodedtoken['role",{"_index":238,"title":{},"body":{"guards/RolesGuard.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/Shed.html":{},"controllers/ShedController.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":80,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginUserDto.html":{},"guards/RolesGuard.html":{},"classes/Shed.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":298,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["delete('/:id",{"_index":328,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["delete('/:id')@roles('admin",{"_index":537,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete('/:id')@roles('admin')@useguards(rolesguard",{"_index":275,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{}}}],["deleted",{"_index":336,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["deletedshed",{"_index":333,"title":{},"body":{"controllers/ShedController.html":{},"injectables/ShedService.html":{}}}],["deletedtransaction",{"_index":456,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["deleteduser",{"_index":594,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteshed",{"_index":377,"title":{},"body":{"injectables/ShedService.html":{}}}],["deleteshed(shedid",{"_index":388,"title":{},"body":{"injectables/ShedService.html":{}}}],["deletestudent",{"_index":262,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["deletestudent(@res",{"_index":331,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["deletestudent(response",{"_index":273,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["deletetransaction",{"_index":475,"title":{},"body":{"injectables/TransactionService.html":{}}}],["deletetransaction(transactionid",{"_index":483,"title":{},"body":{"injectables/TransactionService.html":{}}}],["deleteuser",{"_index":609,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser(userid",{"_index":621,"title":{},"body":{"injectables/UsersService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShedModule.html":{},"modules/TransactionModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":144,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/Transaction.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":722,"title":{},"body":{"index.html":{}}}],["dinner",{"_index":192,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["documentation",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":308,"title":{},"body":{"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/login",{"_index":558,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/update",{"_index":312,"title":{},"body":{"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":733,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":709,"title":{},"body":{"index.html":{}}}],["email",{"_index":158,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["emailexists",{"_index":568,"title":{},"body":{"controllers/UsersController.html":{}}}],["err",{"_index":324,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["error",{"_index":243,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["exec",{"_index":415,"title":{},"body":{"injectables/ShedService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":214,"title":{},"body":{"guards/RolesGuard.html":{}}}],["expiresin",{"_index":86,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginUserDto.html":{},"guards/RolesGuard.html":{},"classes/Shed.html":{},"controllers/ShedController.html":{},"modules/ShedModule.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShedModule.html":{},"modules/TransactionModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":185,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":183,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":189,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["farm",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["fetch",{"_index":570,"title":{},"body":{"controllers/UsersController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginUserDto.html":{},"guards/RolesGuard.html":{},"classes/Shed.html":{},"controllers/ShedController.html":{},"modules/ShedModule.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["firstname",{"_index":159,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["found",{"_index":347,"title":{},"body":{"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":707,"title":{},"body":{"index.html":{}}}],["function",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":701,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":572,"title":{},"body":{"controllers/UsersController.html":{}}}],["generatetoken",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetoken(user",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:id",{"_index":360,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["get('/:id')@roles('admin",{"_index":287,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{}}}],["get('/:id')@roles('shed",{"_index":547,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/all",{"_index":339,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["get('/all')@roles('admin",{"_index":278,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{}}}],["get('/all')@roles('admin')@useguards(rolesguard",{"_index":539,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/region",{"_index":355,"title":{},"body":{"controllers/ShedController.html":{},"controllers/UsersController.html":{}}}],["get('/region')@roles('region",{"_index":282,"title":{},"body":{"controllers/ShedController.html":{},"controllers/UsersController.html":{}}}],["get('/site",{"_index":290,"title":{},"body":{"controllers/ShedController.html":{},"controllers/UsersController.html":{}}}],["get('/site')@roles('site",{"_index":544,"title":{},"body":{"controllers/UsersController.html":{}}}],["getall",{"_index":263,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["getall(@res",{"_index":343,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["getall(response",{"_index":277,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["getallsheds",{"_index":378,"title":{},"body":{"injectables/ShedService.html":{}}}],["getalltransactions",{"_index":476,"title":{},"body":{"injectables/TransactionService.html":{}}}],["getallusers",{"_index":610,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getregionshed",{"_index":264,"title":{},"body":{"controllers/ShedController.html":{}}}],["getregionshed(@res",{"_index":358,"title":{},"body":{"controllers/ShedController.html":{}}}],["getregionshed(response",{"_index":281,"title":{},"body":{"controllers/ShedController.html":{}}}],["getregionuser",{"_index":611,"title":{},"body":{"injectables/UsersService.html":{}}}],["getregionuser(num",{"_index":624,"title":{},"body":{"injectables/UsersService.html":{}}}],["getregionusers",{"_index":530,"title":{},"body":{"controllers/UsersController.html":{}}}],["getregionusers(@res",{"_index":589,"title":{},"body":{"controllers/UsersController.html":{}}}],["getregionusers(response",{"_index":541,"title":{},"body":{"controllers/UsersController.html":{}}}],["getshedbyid",{"_index":379,"title":{},"body":{"injectables/ShedService.html":{}}}],["getshedbyid(shedid",{"_index":391,"title":{},"body":{"injectables/ShedService.html":{}}}],["getshedbyregion",{"_index":380,"title":{},"body":{"injectables/ShedService.html":{}}}],["getshedbyregion(regionnum",{"_index":393,"title":{},"body":{"injectables/ShedService.html":{}}}],["getshedbysite",{"_index":381,"title":{},"body":{"injectables/ShedService.html":{}}}],["getshedbysite(sitenum",{"_index":396,"title":{},"body":{"injectables/ShedService.html":{}}}],["getshedid",{"_index":265,"title":{},"body":{"controllers/ShedController.html":{}}}],["getshedid(@res",{"_index":361,"title":{},"body":{"controllers/ShedController.html":{}}}],["getshedid(response",{"_index":285,"title":{},"body":{"controllers/ShedController.html":{}}}],["getsiteshed",{"_index":266,"title":{},"body":{"controllers/ShedController.html":{}}}],["getsiteshed(@res",{"_index":348,"title":{},"body":{"controllers/ShedController.html":{}}}],["getsiteshed(response",{"_index":289,"title":{},"body":{"controllers/ShedController.html":{}}}],["getsiteuser",{"_index":612,"title":{},"body":{"injectables/UsersService.html":{}}}],["getsiteuser(num",{"_index":627,"title":{},"body":{"injectables/UsersService.html":{}}}],["getsiteusers",{"_index":531,"title":{},"body":{"controllers/UsersController.html":{}}}],["getsiteusers(@res",{"_index":586,"title":{},"body":{"controllers/UsersController.html":{}}}],["getsiteusers(response",{"_index":543,"title":{},"body":{"controllers/UsersController.html":{}}}],["getting",{"_index":703,"title":{"index.html":{}},"body":{}}],["gettransactionbyid",{"_index":477,"title":{},"body":{"injectables/TransactionService.html":{}}}],["gettransactionbyid(transactionid",{"_index":486,"title":{},"body":{"injectables/TransactionService.html":{}}}],["gettransactionid",{"_index":437,"title":{},"body":{"controllers/TransactionController.html":{}}}],["gettransactionid(@res",{"_index":463,"title":{},"body":{"controllers/TransactionController.html":{}}}],["gettransactionid(response",{"_index":444,"title":{},"body":{"controllers/TransactionController.html":{}}}],["getuserbyemail",{"_index":613,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyemail(email",{"_index":629,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyid",{"_index":614,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyid(userid",{"_index":631,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserid",{"_index":532,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserid(@res",{"_index":592,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserid(response",{"_index":546,"title":{},"body":{"controllers/UsersController.html":{}}}],["granted",{"_index":227,"title":{},"body":{"guards/RolesGuard.html":{}}}],["grow",{"_index":740,"title":{},"body":{"index.html":{}}}],["guard",{"_index":205,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":207,"title":{},"body":{"guards/RolesGuard.html":{}}}],["healthcheckup",{"_index":121,"title":{},"body":{"classes/CreateShedDto.html":{},"classes/Shed.html":{}}}],["hencount",{"_index":122,"title":{},"body":{"classes/CreateShedDto.html":{},"classes/Shed.html":{}}}],["here",{"_index":751,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":554,"title":{},"body":{"controllers/UsersController.html":{}}}],["https://nestjs.com",{"_index":758,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":299,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["id",{"_index":296,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["identifier",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":218,"title":{},"body":{"guards/RolesGuard.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"guards/RolesGuard.html":{},"classes/Shed.html":{},"controllers/ShedController.html":{},"modules/ShedModule.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShedModule.html":{},"modules/TransactionModule.html":{},"modules/UsersModule.html":{}}}],["imports:[mongoosemodule.forfeature",{"_index":374,"title":{},"body":{"modules/ShedModule.html":{},"modules/TransactionModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"classes/LoginUserDto.html":{},"guards/RolesGuard.html":{},"classes/Shed.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginUserDto.html":{},"guards/RolesGuard.html":{},"classes/Shed.html":{},"controllers/ShedController.html":{},"modules/ShedModule.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":59,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ShedService.html":{},"injectables/TransactionService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"injectables/ShedService.html":{},"injectables/TransactionService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ShedService.html":{},"injectables/TransactionService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":402,"title":{},"body":{"injectables/ShedService.html":{},"injectables/TransactionService.html":{},"injectables/UsersService.html":{}}}],["injectmodel('shed",{"_index":406,"title":{},"body":{"injectables/ShedService.html":{}}}],["injectmodel('transaction",{"_index":492,"title":{},"body":{"injectables/TransactionService.html":{}}}],["injectmodel('user",{"_index":640,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":718,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":720,"title":{},"body":{"index.html":{}}}],["interface",{"_index":173,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["interface/shed.interface",{"_index":405,"title":{},"body":{"injectables/ShedService.html":{}}}],["interface/transaction.interface",{"_index":491,"title":{},"body":{"injectables/TransactionService.html":{}}}],["interface/user.interface",{"_index":638,"title":{},"body":{"injectables/UsersService.html":{}}}],["interfaces",{"_index":174,"title":{},"body":{"interfaces/JwtPayload.html":{},"overview.html":{}}}],["isboolean",{"_index":127,"title":{},"body":{"classes/CreateShedDto.html":{}}}],["isemail",{"_index":137,"title":{},"body":{"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnumber",{"_index":130,"title":{},"body":{"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring",{"_index":132,"title":{},"body":{"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring()@minlength(6",{"_index":166,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["join",{"_index":747,"title":{},"body":{"index.html":{}}}],["json",{"_index":350,"title":{},"body":{"controllers/ShedController.html":{},"controllers/UsersController.html":{}}}],["json['userid",{"_index":352,"title":{},"body":{"controllers/ShedController.html":{},"controllers/UsersController.html":{}}}],["jwt",{"_index":81,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":76,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":188,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":72,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":82,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":106,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"controllers/UsersController.html":{}}}],["jwtstrategy",{"_index":70,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":755,"title":{},"body":{"index.html":{}}}],["key",{"_index":84,"title":{},"body":{"modules/AuthModule.html":{}}}],["lastname",{"_index":160,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShedModule.html":{},"modules/TransactionModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":761,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":737,"title":{},"body":{"index.html":{}}}],["logged",{"_index":580,"title":{},"body":{"controllers/UsersController.html":{}}}],["logic",{"_index":364,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["login",{"_index":565,"title":{},"body":{"controllers/UsersController.html":{}}}],["logindto",{"_index":198,"title":{"classes/LoginDto.html":{}},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["loginuser",{"_index":533,"title":{},"body":{"controllers/UsersController.html":{}}}],["loginuser(@res",{"_index":566,"title":{},"body":{"controllers/UsersController.html":{}}}],["loginuser(response",{"_index":549,"title":{},"body":{"controllers/UsersController.html":{}}}],["loginuserdto",{"_index":202,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["manager",{"_index":357,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["manager')@useguards(rolesguard",{"_index":283,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginUserDto.html":{},"guards/RolesGuard.html":{},"classes/Shed.html":{},"controllers/ShedController.html":{},"modules/ShedModule.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":321,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["metadata",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":138,"title":{},"body":{"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(6",{"_index":172,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["miscellaneous",{"_index":700,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":736,"title":{},"body":{"index.html":{}}}],["mode",{"_index":726,"title":{},"body":{"index.html":{}}}],["model",{"_index":383,"title":{},"body":{"injectables/ShedService.html":{},"injectables/TransactionService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShedModule.html":{},"modules/TransactionModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShedModule.html":{},"modules/TransactionModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShedModule.html":{},"modules/TransactionModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":403,"title":{},"body":{"injectables/ShedService.html":{},"injectables/TransactionService.html":{},"injectables/UsersService.html":{}}}],["mongoosemodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/ShedModule.html":{},"modules/TransactionModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot(\"mongodb+srv://junith:9oeta6mmxtefflye@cluster0.lihyu7f.mongodb.net/?retrywrites=true&w=majority",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":750,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":756,"title":{},"body":{"index.html":{}}}],["name",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateShedDto.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"classes/Shed.html":{},"controllers/ShedController.html":{},"modules/ShedModule.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":714,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":760,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"modules/ShedModule.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":217,"title":{},"body":{"guards/RolesGuard.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":73,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":505,"title":{},"body":{"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"classes/Shed.html":{},"modules/ShedModule.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":75,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":508,"title":{},"body":{"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["new",{"_index":197,"title":{},"body":{"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"injectables/ShedService.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newshed",{"_index":318,"title":{},"body":{"controllers/ShedController.html":{}}}],["newtransaction",{"_index":454,"title":{},"body":{"controllers/TransactionController.html":{}}}],["newuser",{"_index":563,"title":{},"body":{"controllers/UsersController.html":{}}}],["node.js",{"_index":706,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":401,"title":{},"body":{"injectables/ShedService.html":{},"injectables/TransactionService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('region",{"_index":418,"title":{},"body":{"injectables/ShedService.html":{}}}],["notfoundexception('shed",{"_index":412,"title":{},"body":{"injectables/ShedService.html":{}}}],["notfoundexception('site",{"_index":416,"title":{},"body":{"injectables/ShedService.html":{}}}],["notfoundexception('transaction",{"_index":497,"title":{},"body":{"injectables/TransactionService.html":{}}}],["notfoundexception('user",{"_index":652,"title":{},"body":{"injectables/UsersService.html":{}}}],["npm",{"_index":719,"title":{},"body":{"index.html":{}}}],["null",{"_index":648,"title":{},"body":{"injectables/UsersService.html":{}}}],["num",{"_index":626,"title":{},"body":{"injectables/UsersService.html":{}}}],["number",{"_index":129,"title":{},"body":{"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/Shed.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["observable",{"_index":555,"title":{},"body":{"controllers/UsersController.html":{}}}],["omittype",{"_index":507,"title":{},"body":{"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":515,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["open",{"_index":738,"title":{},"body":{"index.html":{}}}],["optional",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShedModule.html":{},"modules/TransactionModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overseer",{"_index":123,"title":{},"body":{"classes/CreateShedDto.html":{},"classes/Shed.html":{}}}],["overseerid",{"_index":145,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/Transaction.html":{}}}],["overview",{"_index":765,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":682,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":300,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":332,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":504,"title":{},"body":{"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createsheddto",{"_index":509,"title":{},"body":{"classes/UpdateShedDto.html":{}}}],["partialtype(createtransactiondto",{"_index":511,"title":{},"body":{"classes/UpdateTransactionDto.html":{}}}],["passport",{"_index":184,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":74,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":79,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":181,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":186,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":161,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["passwords",{"_index":571,"title":{},"body":{"controllers/UsersController.html":{}}}],["payload",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["payload.interface",{"_index":107,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":176,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["phonenumber",{"_index":162,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["please",{"_index":748,"title":{},"body":{"index.html":{}}}],["post",{"_index":269,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":550,"title":{},"body":{"controllers/UsersController.html":{}}}],["poultry",{"_index":64,"title":{},"body":{"injectables/AppService.html":{}}}],["poultrydb",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":260,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":219,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":728,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":705,"title":{},"body":{"index.html":{}}}],["project",{"_index":739,"title":{},"body":{"index.html":{}}}],["promise",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["prop",{"_index":247,"title":{},"body":{"classes/Shed.html":{},"classes/Transaction.html":{},"classes/User.html":{}}}],["properties",{"_index":120,"title":{"properties.html":{}},"body":{"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"classes/LoginUserDto.html":{},"classes/Shed.html":{},"classes/Transaction.html":{},"classes/User.html":{},"properties.html":{}}}],["provide",{"_index":606,"title":{},"body":{"modules/UsersModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShedModule.html":{},"modules/TransactionModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["put",{"_index":301,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["put(':id",{"_index":363,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["put(':id')@roles('admin",{"_index":294,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["read",{"_index":749,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":211,"title":{},"body":{"guards/RolesGuard.html":{}}}],["region",{"_index":124,"title":{},"body":{"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/Shed.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["regionnum",{"_index":395,"title":{},"body":{"injectables/ShedService.html":{}}}],["regionnum}).exec",{"_index":417,"title":{},"body":{"injectables/ShedService.html":{}}}],["repository",{"_index":717,"title":{},"body":{"index.html":{}}}],["req",{"_index":302,"title":{},"body":{"controllers/ShedController.html":{},"controllers/UsersController.html":{}}}],["request",{"_index":228,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"controllers/UsersController.html":{}}}],["request.headers.authorization.replace('bearer",{"_index":349,"title":{},"body":{"controllers/ShedController.html":{},"controllers/UsersController.html":{}}}],["request.headers.authorization?.split",{"_index":231,"title":{},"body":{"guards/RolesGuard.html":{}}}],["require('bcrypt",{"_index":639,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":225,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["requiredroles",{"_index":220,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":240,"title":{},"body":{"guards/RolesGuard.html":{}}}],["res",{"_index":303,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShedModule.html":{},"modules/TransactionModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":271,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["response.json",{"_index":581,"title":{},"body":{"controllers/UsersController.html":{}}}],["response.status(err.status).json(err.response",{"_index":337,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["response.status(httpstatus.bad_request).json",{"_index":325,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["response.status(httpstatus.created).json",{"_index":320,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["response.status(httpstatus.ok).json",{"_index":335,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginUserDto.html":{},"guards/RolesGuard.html":{},"classes/Shed.html":{},"controllers/ShedController.html":{},"modules/ShedModule.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["roles",{"_index":222,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles('admin",{"_index":329,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["roles('admin',\"shed",{"_index":462,"title":{},"body":{"controllers/TransactionController.html":{}}}],["roles('admin','accountant",{"_index":459,"title":{},"body":{"controllers/TransactionController.html":{}}}],["roles('region",{"_index":356,"title":{},"body":{"controllers/ShedController.html":{},"controllers/UsersController.html":{}}}],["roles('shed",{"_index":591,"title":{},"body":{"controllers/UsersController.html":{}}}],["roles('site",{"_index":585,"title":{},"body":{"controllers/UsersController.html":{}}}],["rolesguard",{"_index":206,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["route",{"_index":342,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["run",{"_index":723,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":556,"title":{},"body":{"controllers/UsersController.html":{},"dependencies.html":{}}}],["scalable",{"_index":710,"title":{},"body":{"index.html":{}}}],["schema",{"_index":254,"title":{},"body":{"classes/Shed.html":{},"modules/ShedModule.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":255,"title":{},"body":{"classes/Shed.html":{},"classes/Transaction.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(shed",{"_index":257,"title":{},"body":{"classes/Shed.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(transaction",{"_index":433,"title":{},"body":{"classes/Transaction.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":526,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["secret",{"_index":83,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":190,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":711,"title":{},"body":{"index.html":{}}}],["setmetadata('roles",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shed",{"_index":245,"title":{"classes/Shed.html":{}},"body":{"classes/Shed.html":{},"controllers/ShedController.html":{},"modules/ShedModule.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"coverage.html":{}}}],["shed.controller",{"_index":372,"title":{},"body":{"modules/ShedModule.html":{}}}],["shed.dto",{"_index":309,"title":{},"body":{"controllers/ShedController.html":{},"injectables/ShedService.html":{},"classes/UpdateShedDto.html":{}}}],["shed.dto.ts",{"_index":119,"title":{},"body":{"classes/CreateShedDto.html":{},"classes/UpdateShedDto.html":{},"coverage.html":{}}}],["shed.dto.ts:10",{"_index":128,"title":{},"body":{"classes/CreateShedDto.html":{}}}],["shed.dto.ts:12",{"_index":134,"title":{},"body":{"classes/CreateShedDto.html":{}}}],["shed.dto.ts:14",{"_index":131,"title":{},"body":{"classes/CreateShedDto.html":{}}}],["shed.dto.ts:16",{"_index":135,"title":{},"body":{"classes/CreateShedDto.html":{}}}],["shed.dto.ts:18",{"_index":136,"title":{},"body":{"classes/CreateShedDto.html":{}}}],["shed.dto.ts:8",{"_index":133,"title":{},"body":{"classes/CreateShedDto.html":{}}}],["shed.service",{"_index":307,"title":{},"body":{"controllers/ShedController.html":{},"modules/ShedModule.html":{}}}],["shed/shed.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["shedcontroller",{"_index":258,"title":{"controllers/ShedController.html":{}},"body":{"controllers/ShedController.html":{},"modules/ShedModule.html":{},"coverage.html":{}}}],["sheddata",{"_index":344,"title":{},"body":{"controllers/ShedController.html":{}}}],["sheddocument",{"_index":404,"title":{},"body":{"injectables/ShedService.html":{},"miscellaneous/typealiases.html":{}}}],["shedid",{"_index":274,"title":{},"body":{"controllers/ShedController.html":{},"injectables/ShedService.html":{}}}],["shedmodel",{"_index":385,"title":{},"body":{"injectables/ShedService.html":{}}}],["shedmodule",{"_index":40,"title":{"modules/ShedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ShedModule.html":{},"modules.html":{},"overview.html":{}}}],["shedschema",{"_index":256,"title":{},"body":{"classes/Shed.html":{},"modules/ShedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shedschema}]),authmodule,usersmodule",{"_index":375,"title":{},"body":{"modules/ShedModule.html":{}}}],["shedservice",{"_index":306,"title":{"injectables/ShedService.html":{}},"body":{"controllers/ShedController.html":{},"modules/ShedModule.html":{},"injectables/ShedService.html":{},"coverage.html":{},"overview.html":{}}}],["shedsroute",{"_index":338,"title":{},"body":{"controllers/ShedController.html":{}}}],["side",{"_index":712,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":85,"title":{},"body":{"modules/AuthModule.html":{}}}],["site",{"_index":125,"title":{},"body":{"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/Shed.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["sitenum",{"_index":398,"title":{},"body":{"injectables/ShedService.html":{}}}],["something",{"_index":574,"title":{},"body":{"controllers/UsersController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginUserDto.html":{},"guards/RolesGuard.html":{},"classes/Shed.html":{},"controllers/ShedController.html":{},"modules/ShedModule.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["specify",{"_index":341,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["sponsors",{"_index":742,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":702,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.decorator.ts",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shed.interface.ts",{"_index":775,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../shedschema.ts",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../transaction.interface.ts",{"_index":776,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../transactionschema.ts",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.interface.ts",{"_index":777,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../users.service.ts",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../userschema.ts",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":61,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module",{"_index":373,"title":{},"body":{"modules/ShedModule.html":{},"modules/TransactionModule.html":{},"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":71,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service",{"_index":305,"title":{},"body":{"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["src/auth/auth.service.ts",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":199,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:2",{"_index":200,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:3",{"_index":201,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt",{"_index":175,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy",{"_index":605,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":177,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:8",{"_index":179,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/common/decorators/roles.decorator",{"_index":310,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["src/common/decorators/roles.decorator.ts",{"_index":667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/gaurds/roles.guard",{"_index":311,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["src/common/gaurds/roles.guard.ts",{"_index":208,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/common/gaurds/roles.guard.ts:12",{"_index":215,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/gaurds/roles.guard.ts:6",{"_index":212,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/main.ts",{"_index":670,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shed/dto/create",{"_index":118,"title":{},"body":{"classes/CreateShedDto.html":{},"coverage.html":{}}}],["src/shed/dto/update",{"_index":503,"title":{},"body":{"classes/UpdateShedDto.html":{},"coverage.html":{}}}],["src/shed/interface/shed.interface.ts",{"_index":673,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/shed/shed.controller.ts",{"_index":259,"title":{},"body":{"controllers/ShedController.html":{},"coverage.html":{}}}],["src/shed/shed.controller.ts:118",{"_index":288,"title":{},"body":{"controllers/ShedController.html":{}}}],["src/shed/shed.controller.ts:132",{"_index":295,"title":{},"body":{"controllers/ShedController.html":{}}}],["src/shed/shed.controller.ts:33",{"_index":270,"title":{},"body":{"controllers/ShedController.html":{}}}],["src/shed/shed.controller.ts:52",{"_index":276,"title":{},"body":{"controllers/ShedController.html":{}}}],["src/shed/shed.controller.ts:68",{"_index":280,"title":{},"body":{"controllers/ShedController.html":{}}}],["src/shed/shed.controller.ts:80",{"_index":291,"title":{},"body":{"controllers/ShedController.html":{}}}],["src/shed/shed.controller.ts:99",{"_index":284,"title":{},"body":{"controllers/ShedController.html":{}}}],["src/shed/shed.module.ts",{"_index":371,"title":{},"body":{"modules/ShedModule.html":{}}}],["src/shed/shed.service.ts",{"_index":376,"title":{},"body":{"injectables/ShedService.html":{},"coverage.html":{}}}],["src/shed/shed.service.ts:10",{"_index":384,"title":{},"body":{"injectables/ShedService.html":{}}}],["src/shed/shed.service.ts:15",{"_index":387,"title":{},"body":{"injectables/ShedService.html":{}}}],["src/shed/shed.service.ts:24",{"_index":389,"title":{},"body":{"injectables/ShedService.html":{}}}],["src/shed/shed.service.ts:36",{"_index":392,"title":{},"body":{"injectables/ShedService.html":{}}}],["src/shed/shed.service.ts:43",{"_index":397,"title":{},"body":{"injectables/ShedService.html":{}}}],["src/shed/shed.service.ts:50",{"_index":394,"title":{},"body":{"injectables/ShedService.html":{}}}],["src/shed/shed.service.ts:58",{"_index":390,"title":{},"body":{"injectables/ShedService.html":{}}}],["src/shed/shed.service.ts:63",{"_index":400,"title":{},"body":{"injectables/ShedService.html":{}}}],["src/shed/shedschema.ts",{"_index":246,"title":{},"body":{"classes/Shed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shed/shedschema.ts:11",{"_index":249,"title":{},"body":{"classes/Shed.html":{}}}],["src/shed/shedschema.ts:13",{"_index":252,"title":{},"body":{"classes/Shed.html":{}}}],["src/shed/shedschema.ts:15",{"_index":253,"title":{},"body":{"classes/Shed.html":{}}}],["src/shed/shedschema.ts:5",{"_index":250,"title":{},"body":{"classes/Shed.html":{}}}],["src/shed/shedschema.ts:7",{"_index":248,"title":{},"body":{"classes/Shed.html":{}}}],["src/shed/shedschema.ts:9",{"_index":251,"title":{},"body":{"classes/Shed.html":{}}}],["src/transaction/dto/create",{"_index":141,"title":{},"body":{"classes/CreateTransactionDto.html":{},"coverage.html":{}}}],["src/transaction/dto/update",{"_index":510,"title":{},"body":{"classes/UpdateTransactionDto.html":{},"coverage.html":{}}}],["src/transaction/interface/transaction.interface.ts",{"_index":676,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/transaction/transaction.controller.ts",{"_index":435,"title":{},"body":{"controllers/TransactionController.html":{},"coverage.html":{}}}],["src/transaction/transaction.controller.ts:17",{"_index":440,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.controller.ts:36",{"_index":442,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.controller.ts:52",{"_index":443,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.controller.ts:66",{"_index":445,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.controller.ts:79",{"_index":448,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.module.ts",{"_index":471,"title":{},"body":{"modules/TransactionModule.html":{}}}],["src/transaction/transaction.service.ts",{"_index":474,"title":{},"body":{"injectables/TransactionService.html":{},"coverage.html":{}}}],["src/transaction/transaction.service.ts:12",{"_index":479,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:18",{"_index":482,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:27",{"_index":484,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:34",{"_index":487,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:42",{"_index":485,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:45",{"_index":489,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transactionschema.ts",{"_index":424,"title":{},"body":{"classes/Transaction.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/transaction/transactionschema.ts:11",{"_index":425,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/transactionschema.ts:13",{"_index":427,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/transactionschema.ts:15",{"_index":429,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/transactionschema.ts:17",{"_index":428,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/transactionschema.ts:5",{"_index":431,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/transactionschema.ts:7",{"_index":430,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/transactionschema.ts:9",{"_index":426,"title":{},"body":{"classes/Transaction.html":{}}}],["src/users/dto/create",{"_index":156,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/login",{"_index":203,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":513,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/interface/user.interface.ts",{"_index":678,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/users/users.controller.ts",{"_index":528,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:115",{"_index":542,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:135",{"_index":548,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:149",{"_index":538,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:162",{"_index":553,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:35",{"_index":536,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:53",{"_index":551,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:80",{"_index":540,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:95",{"_index":545,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":78,"title":{},"body":{"modules/AuthModule.html":{},"modules/ShedModule.html":{}}}],["src/users/users.module.ts",{"_index":602,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":313,"title":{},"body":{"controllers/ShedController.html":{}}}],["src/users/users.service.ts",{"_index":608,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts:10",{"_index":617,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:16",{"_index":620,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:25",{"_index":636,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:35",{"_index":632,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:42",{"_index":625,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:49",{"_index":628,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:57",{"_index":623,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:61",{"_index":630,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:69",{"_index":622,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:76",{"_index":634,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/userschema.ts",{"_index":516,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/userschema.ts:11",{"_index":521,"title":{},"body":{"classes/User.html":{}}}],["src/users/userschema.ts:13",{"_index":523,"title":{},"body":{"classes/User.html":{}}}],["src/users/userschema.ts:15",{"_index":524,"title":{},"body":{"classes/User.html":{}}}],["src/users/userschema.ts:17",{"_index":522,"title":{},"body":{"classes/User.html":{}}}],["src/users/userschema.ts:19",{"_index":520,"title":{},"body":{"classes/User.html":{}}}],["src/users/userschema.ts:5",{"_index":518,"title":{},"body":{"classes/User.html":{}}}],["src/users/userschema.ts:7",{"_index":517,"title":{},"body":{"classes/User.html":{}}}],["src/users/userschema.ts:9",{"_index":519,"title":{},"body":{"classes/User.html":{}}}],["start",{"_index":724,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":727,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":729,"title":{},"body":{"index.html":{}}}],["started",{"_index":704,"title":{"index.html":{}},"body":{}}],["starter",{"_index":716,"title":{},"body":{"index.html":{}}}],["statements",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":326,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":752,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":182,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"classes/LoginUserDto.html":{},"classes/Shed.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["studentid",{"_index":286,"title":{},"body":{"controllers/ShedController.html":{},"controllers/UsersController.html":{}}}],["succesfully",{"_index":579,"title":{},"body":{"controllers/UsersController.html":{}}}],["successfully",{"_index":323,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["super",{"_index":187,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":743,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":763,"title":{},"body":{"modules.html":{}}}],["table",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":732,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":735,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":734,"title":{},"body":{"index.html":{}}}],["tests",{"_index":731,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":741,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.generatetoken(user",{"_index":577,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.authservice.validateuserbyid(payload.userid",{"_index":195,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.getuserbyemail(email",{"_index":647,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.decode(jwt",{"_index":351,"title":{},"body":{"controllers/ShedController.html":{},"controllers/UsersController.html":{}}}],["this.jwtservice.signasync(payload",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":235,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.reflector.get",{"_index":221,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.shedmodel(createsheddto",{"_index":408,"title":{},"body":{"injectables/ShedService.html":{}}}],["this.shedmodel.find",{"_index":414,"title":{},"body":{"injectables/ShedService.html":{}}}],["this.shedmodel.find().exec",{"_index":419,"title":{},"body":{"injectables/ShedService.html":{}}}],["this.shedmodel.findbyid(shedid).exec",{"_index":413,"title":{},"body":{"injectables/ShedService.html":{}}}],["this.shedmodel.findbyidanddelete(shedid).exec",{"_index":411,"title":{},"body":{"injectables/ShedService.html":{}}}],["this.shedmodel.findbyidandupdate",{"_index":422,"title":{},"body":{"injectables/ShedService.html":{}}}],["this.shedservice.create(createsheddto",{"_index":319,"title":{},"body":{"controllers/ShedController.html":{}}}],["this.shedservice.deleteshed(shedid",{"_index":334,"title":{},"body":{"controllers/ShedController.html":{}}}],["this.shedservice.getallsheds",{"_index":345,"title":{},"body":{"controllers/ShedController.html":{}}}],["this.shedservice.getshedbyid(studentid",{"_index":362,"title":{},"body":{"controllers/ShedController.html":{}}}],["this.shedservice.getshedbyregion(user['region",{"_index":359,"title":{},"body":{"controllers/ShedController.html":{}}}],["this.shedservice.getshedbysite(user['site",{"_index":354,"title":{},"body":{"controllers/ShedController.html":{}}}],["this.shedservice.updateshed(id",{"_index":367,"title":{},"body":{"controllers/ShedController.html":{}}}],["this.transactionmodel(createtransactiondto",{"_index":494,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionmodel.find().exec",{"_index":499,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionmodel.findbyid(transactionid).exec",{"_index":498,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionmodel.findbyidanddelete(transactionid).exec",{"_index":496,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionmodel.findbyidandupdate",{"_index":502,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionservice.create(createtransactiondto",{"_index":455,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.transactionservice.deletetransaction(transactionid",{"_index":457,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.transactionservice.getalltransactions",{"_index":461,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.transactionservice.gettransactionbyid(transactionid",{"_index":464,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.transactionservice.updatetransaction(id",{"_index":467,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.usermodel(createuserdto",{"_index":642,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find",{"_index":653,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find().exec",{"_index":654,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(userid).exec",{"_index":651,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyidanddelete(userid).exec",{"_index":656,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyidandupdate",{"_index":659,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":655,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.create(createuserdto",{"_index":564,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.deleteuser(studentid",{"_index":595,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.getallusers",{"_index":584,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.getregionuser(user['region",{"_index":590,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.getsiteuser(user['site",{"_index":588,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.getuserbyid(id",{"_index":353,"title":{},"body":{"controllers/ShedController.html":{},"controllers/UsersController.html":{}}}],["this.userservice.getuserbyid(studentid",{"_index":593,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.updateuser(id",{"_index":597,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.validateuser(email",{"_index":575,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":196,"title":{},"body":{"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"injectables/ShedService.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["title",{"_index":146,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/Transaction.html":{}}}],["token",{"_index":230,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/UsersController.html":{}}}],["touch",{"_index":753,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":423,"title":{"classes/Transaction.html":{}},"body":{"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["transaction.controller",{"_index":472,"title":{},"body":{"modules/TransactionModule.html":{}}}],["transaction.dto",{"_index":451,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/UpdateTransactionDto.html":{}}}],["transaction.dto.ts",{"_index":142,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/UpdateTransactionDto.html":{},"coverage.html":{}}}],["transaction.dto.ts:11",{"_index":153,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:13",{"_index":149,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:15",{"_index":148,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:17",{"_index":150,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:19",{"_index":152,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:21",{"_index":151,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:9",{"_index":154,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.service",{"_index":450,"title":{},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{}}}],["transaction/transaction.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["transactioncontroller",{"_index":434,"title":{"controllers/TransactionController.html":{}},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"coverage.html":{}}}],["transactiondata",{"_index":460,"title":{},"body":{"controllers/TransactionController.html":{}}}],["transactiondocument",{"_index":490,"title":{},"body":{"injectables/TransactionService.html":{},"miscellaneous/typealiases.html":{}}}],["transactionid",{"_index":441,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["transactionmodel",{"_index":480,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transactionmodule",{"_index":41,"title":{"modules/TransactionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionschema",{"_index":432,"title":{},"body":{"classes/Transaction.html":{},"modules/TransactionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["transactionschema}]),authmodule",{"_index":473,"title":{},"body":{"modules/TransactionModule.html":{}}}],["transactionservice",{"_index":449,"title":{"injectables/TransactionService.html":{}},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["transactionsroute",{"_index":458,"title":{},"body":{"controllers/TransactionController.html":{}}}],["transactiontype",{"_index":147,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/Transaction.html":{}}}],["transformer",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":224,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["try",{"_index":233,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["twitter",{"_index":759,"title":{},"body":{"index.html":{}}}],["type",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginUserDto.html":{},"guards/RolesGuard.html":{},"classes/Shed.html":{},"controllers/ShedController.html":{},"injectables/ShedService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":773,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":506,"title":{},"body":{"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":715,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":239,"title":{},"body":{"guards/RolesGuard.html":{}}}],["unauthorizedexception",{"_index":180,"title":{},"body":{"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{}}}],["unauthorizedexception('invalid",{"_index":244,"title":{},"body":{"guards/RolesGuard.html":{},"controllers/UsersController.html":{}}}],["unit",{"_index":730,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":272,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["unlicensed",{"_index":772,"title":{},"body":{"properties.html":{}}}],["update",{"_index":365,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["updatedshed",{"_index":366,"title":{},"body":{"controllers/ShedController.html":{},"injectables/ShedService.html":{}}}],["updatedtransaction",{"_index":466,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["updateduser",{"_index":596,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateshed",{"_index":267,"title":{},"body":{"controllers/ShedController.html":{},"injectables/ShedService.html":{}}}],["updateshed(id",{"_index":292,"title":{},"body":{"controllers/ShedController.html":{}}}],["updateshed(shedid",{"_index":399,"title":{},"body":{"injectables/ShedService.html":{}}}],["updatesheddto",{"_index":293,"title":{"classes/UpdateShedDto.html":{}},"body":{"controllers/ShedController.html":{},"injectables/ShedService.html":{},"classes/UpdateShedDto.html":{},"coverage.html":{}}}],["updatesheddto['role",{"_index":421,"title":{},"body":{"injectables/ShedService.html":{}}}],["updatetransaction",{"_index":438,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["updatetransaction(@param('id",{"_index":465,"title":{},"body":{"controllers/TransactionController.html":{}}}],["updatetransaction(id",{"_index":446,"title":{},"body":{"controllers/TransactionController.html":{}}}],["updatetransaction(transactionid",{"_index":488,"title":{},"body":{"injectables/TransactionService.html":{}}}],["updatetransactiondto",{"_index":447,"title":{"classes/UpdateTransactionDto.html":{}},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/UpdateTransactionDto.html":{},"coverage.html":{}}}],["updatetransactiondto['role",{"_index":501,"title":{},"body":{"injectables/TransactionService.html":{}}}],["updateuser",{"_index":534,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuser(id",{"_index":552,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuser(userid",{"_index":633,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":512,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto['role",{"_index":658,"title":{},"body":{"injectables/UsersService.html":{}}}],["useclass",{"_index":607,"title":{},"body":{"modules/UsersModule.html":{}}}],["useguards",{"_index":304,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["useguards(rolesguard",{"_index":330,"title":{},"body":{"controllers/ShedController.html":{},"controllers/TransactionController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":100,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ShedController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.dto",{"_index":514,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":157,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":167,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:12",{"_index":165,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:14",{"_index":168,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:16",{"_index":170,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":171,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":169,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":164,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["user.dto.ts:7",{"_index":163,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":204,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.id",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":650,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.role",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata",{"_index":583,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdocument",{"_index":637,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/UsersService.html":{}}}],["usermodel",{"_index":618,"title":{},"body":{"injectables/UsersService.html":{}}}],["userroles",{"_index":237,"title":{},"body":{"guards/RolesGuard.html":{}}}],["userroles.includes(role",{"_index":241,"title":{},"body":{"guards/RolesGuard.html":{}}}],["users",{"_index":582,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":603,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":557,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/interface/user.interface",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{}}}],["users/users.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.service",{"_index":104,"title":{},"body":{"injectables/AuthService.html":{}}}],["userschema",{"_index":525,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":527,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":315,"title":{},"body":{"controllers/ShedController.html":{},"controllers/UsersController.html":{}}}],["usersmodule",{"_index":42,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShedModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":103,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/ShedController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uuid",{"_index":559,"title":{},"body":{"controllers/UsersController.html":{}}}],["validate(payload",{"_index":193,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":615,"title":{},"body":{"injectables/UsersService.html":{}}}],["validateuser(email",{"_index":635,"title":{},"body":{"injectables/UsersService.html":{}}}],["validator",{"_index":139,"title":{},"body":{"classes/CreateShedDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateShedDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":778,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":770,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":725,"title":{},"body":{"index.html":{}}}],["website",{"_index":757,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":63,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":569,"title":{},"body":{"controllers/UsersController.html":{}}}],["you'd",{"_index":746,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ShedModule.html":{},"modules/TransactionModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nShedModule\n\nShedModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nShedModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ShedModule\n                        \n                        \n                            TransactionModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from './auth/auth.module';\nimport { TransactionModule } from './transaction/transaction.module';\nimport { ShedModule } from './shed/shed.module';\n\n@Module({\n  imports: [MongooseModule.forRoot(\"mongodb+srv://junith:9oetA6mMXTEfFlYE@cluster0.lihyu7f.mongodb.net/?retryWrites=true&w=majority\", {\n    dbName: 'poultryDB',\n  }), UsersModule, TransactionModule, ShedModule],\n  controllers: [AppController],\n  providers: [AppService,],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Welcome to Poultry farm';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: 'your-secret-key',\n      signOptions: { expiresIn: '1d' },\n    })\n  ],\n  controllers: [],\n  providers: [AuthService, JwtStrategy],\n  exports: [PassportModule, JwtModule, AuthService],\n})\nexport class AuthModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UsersService } from '../users/users.service';\nimport { User } from '../users/interface/user.interface';\nimport { JwtPayload } from './jwt-payload.interface';\nimport bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AuthService {\n  constructor(private jwtService: JwtService) {}\n\n  async generateToken(user: User): Promise {\n    const payload: JwtPayload = { userId: user.id, role: user.role };\n    return this.jwtService.signAsync(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateShedDto.html":{"url":"classes/CreateShedDto.html","title":"class - CreateShedDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateShedDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shed/dto/create-shed.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                healthCheckup\n                            \n                            \n                                    \n                                    Readonly\n                                henCount\n                            \n                            \n                                    \n                                    Readonly\n                                Name\n                            \n                            \n                                    \n                                    Readonly\n                                overseer\n                            \n                            \n                                    \n                                    Readonly\n                                region\n                            \n                            \n                                    \n                                    Readonly\n                                site\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        healthCheckup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shed/dto/create-shed.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        henCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shed/dto/create-shed.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shed/dto/create-shed.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        overseer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shed/dto/create-shed.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shed/dto/create-shed.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        site\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shed/dto/create-shed.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsEmail, MinLength, IsNumber, IsBoolean } from 'class-validator';\n\n\nexport class CreateShedDto {\n\n   \n    @IsString()\n    readonly Name: string;\n    @IsBoolean()\n    readonly healthCheckup: boolean;\n    @IsString()\n    readonly  overseer: string;\n    @IsNumber()\n    readonly henCount: number;\n    @IsNumber()\n     readonly region: number;\n    @IsNumber()\n     readonly site: number;\n  \n  \n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTransactionDto.html":{"url":"classes/CreateTransactionDto.html","title":"class - CreateTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/dto/create-transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                amount\n                            \n                            \n                                    \n                                    Readonly\n                                description\n                            \n                            \n                                    \n                                    Readonly\n                                overseerID\n                            \n                            \n                                    \n                                    Readonly\n                                region\n                            \n                            \n                                    \n                                    Readonly\n                                site\n                            \n                            \n                                    \n                                    Readonly\n                                title\n                            \n                            \n                                    \n                                    Readonly\n                                transactionType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/dto/create-transaction.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/dto/create-transaction.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        overseerID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/dto/create-transaction.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/dto/create-transaction.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        site\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/dto/create-transaction.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/dto/create-transaction.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        transactionType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/dto/create-transaction.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsEmail, MinLength, IsNumber } from 'class-validator';\n\n\nexport class CreateTransactionDto {\n\n   \n\n    @IsString()\n    readonly transactionType: string;\n    @IsString()\n    readonly title: string;\n    @IsString()\n    readonly description: string;\n    @IsNumber()\n    readonly amount: number;\n    @IsString()\n    readonly overseerID: string;\n    @IsNumber()\n    readonly site: number;\n    @IsNumber()\n    readonly region: number;\n  \n  \n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    Readonly\n                                firstName\n                            \n                            \n                                    \n                                    Readonly\n                                lastName\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    Readonly\n                                phoneNumber\n                            \n                            \n                                    \n                                    Readonly\n                                region\n                            \n                            \n                                    \n                                    Readonly\n                                role\n                            \n                            \n                                    \n                                    Readonly\n                                site\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        site\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsEmail, MinLength, IsNumber } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  readonly firstName: string;\n  @IsEmail()\n  readonly email: string;\n  @IsString()\n  @MinLength(6)\n  password: string;\n  @IsString() \n  readonly lastName: string;\n  @IsNumber()\n  readonly phoneNumber: number;\n  @IsString()\n  readonly role: string;\n  @IsNumber()\n  readonly site: number;\n  @IsNumber()\n  readonly region: number;\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  userId: string;\n  role: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { AuthService } from './auth.service';\nimport { JwtPayload } from './jwt-payload.interface';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: 'chicken-dinner',\n    });\n  }\n\n  // async validate(payload: JwtPayload) {\n  //   const user = await this.authService.validateUserById(payload.userId);\n  //   if (!user) {\n  //     throw new UnauthorizedException();\n  //   }\n  //   return user;\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginDto {\n    email: string;\n    password: string;\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/login-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/login-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/login-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsEmail, MinLength } from 'class-validator';\n\nexport class LoginUserDto {\n  @IsEmail()\n  readonly email: string;\n\n  @IsString()\n  @MinLength(6)\n  readonly password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/gaurds/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/common/gaurds/roles.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/gaurds/roles.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext, UnauthorizedException } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(\n    private readonly reflector: Reflector,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.get(\n      'roles',\n      context.getHandler(),\n    );\n    if (!requiredRoles) {\n      return true; // No roles required, access granted\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const token = request.headers.authorization?.split(' ')[1];\n\n    try {\n        const decodedToken =  this.jwtService.verify(token,); // Decode the JWT token\n        const userRoles = decodedToken ? decodedToken['role'] : 'unauthorized';\n    \n        return requiredRoles.some((role) => userRoles.includes(role));\n    } catch (error) {\n        throw new UnauthorizedException('Invalid token');\n    }\n   \n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Shed.html":{"url":"classes/Shed.html","title":"class - Shed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Shed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shed/shedSchema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                healthCheckup\n                            \n                            \n                                    \n                                henCount\n                            \n                            \n                                    \n                                Name\n                            \n                            \n                                    \n                                overseer\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                site\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        healthCheckup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shed/shedSchema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        henCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shed/shedSchema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        Name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shed/shedSchema.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        overseer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shed/shedSchema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shed/shedSchema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        site\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shed/shedSchema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n@Schema()\nexport class Shed{\n  @Prop()\n  Name: string;\n  @Prop()\n  healthCheckup: boolean;\n  @Prop()\n  overseer: string;\n  @Prop()\n  henCount: number;\n  @Prop()\n  region: number;\n  @Prop()\n  site: number;\n\n}\n\nexport const shedSchema = SchemaFactory.createForClass(Shed);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ShedController.html":{"url":"controllers/ShedController.html","title":"controller - ShedController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ShedController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shed/shed.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                shed\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createShed\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                deleteStudent\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getRegionShed\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getShedID\n                            \n                            \n                                    \n                                    Async\n                                getSiteShed\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateShed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createShed\n                        \n                    \n                \n            \n            \n                \n                    \n                    createShed(response, createShedDto: CreateShedDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/shed/shed.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createShedDto\n                                    \n                                                CreateShedDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        deleteStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteStudent(response, shedId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@Roles('admin')@UseGuards(RolesGuard)\n                \n            \n\n            \n                \n                    Defined in src/shed/shed.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shedId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/all')@Roles('admin', 'accountant')@UseGuards(RolesGuard)\n                \n            \n\n            \n                \n                    Defined in src/shed/shed.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getRegionShed\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRegionShed(response, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/region')@Roles('region-manager')@UseGuards(RolesGuard)\n                \n            \n\n            \n                \n                    Defined in src/shed/shed.controller.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getShedID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getShedID(response, studentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@Roles('admin', 'shed-manager')@UseGuards(RolesGuard)\n                \n            \n\n            \n                \n                    Defined in src/shed/shed.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    studentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getSiteShed\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSiteShed(response, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/site')\n                \n            \n\n            \n                \n                    Defined in src/shed/shed.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateShed\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateShed(id: string, updateShedDto: UpdateShedDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/shed/shed.controller.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateShedDto\n                                    \n                                                UpdateShedDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Post,\n  Put,\n  Req,\n  Res,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from 'src/auth/auth.service';\nimport { ShedService } from './shed.service';\nimport { CreateShedDto } from './dto/create-shed.dto';\nimport { Roles } from 'src/common/decorators/roles.decorator';\nimport { RolesGuard } from 'src/common/gaurds/roles.guard';\nimport { UpdateShedDto } from './dto/update-shed.dto';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtService } from '@nestjs/jwt';\n\n@Controller('shed')\nexport class ShedController {\n  constructor(\n    private readonly shedService: ShedService,\n    private readonly authService: AuthService,\n    private readonly jwtService: JwtService,\n    private readonly userService: UsersService,\n  ) {}\n  //create shed\n  @Post()\n  async createShed(@Res() response, @Body() createShedDto: CreateShedDto) {\n    try {\n      const newShed = await this.shedService.create(createShedDto);\n      return response.status(HttpStatus.CREATED).json({\n        message: 'shed has been created successfully',\n        newShed,\n      });\n    } catch (err) {\n      return response.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: 400,\n        message: 'Error: shed not created!',\n        error: err,\n      });\n    }\n  }\n  //delete shed\n  @Delete('/:id')\n  @Roles('admin')\n  @UseGuards(RolesGuard)\n  async deleteStudent(@Res() response, @Param('id') shedId: string) {\n    try {\n      const deletedShed = await this.shedService.deleteShed(shedId);\n      return response.status(HttpStatus.OK).json({\n        message: 'Shed deleted successfully',\n        deletedShed,\n      });\n    } catch (err) {\n      return response.status(err.status).json(err.response);\n    }\n  }\n\n  //get all shedsroute\n  @Get('/all')\n  @Roles('admin', 'accountant') // Specify the required roles for this route\n  @UseGuards(RolesGuard)\n  async getAll(@Res() response) {\n    try {\n      const shedData = await this.shedService.getAllSheds();\n      return response.status(HttpStatus.OK).json({\n        message: 'All Shed data found successfully',\n        shedData,\n      });\n    } catch (err) {\n      return response.status(err.status).json(err.response);\n    }\n  }\n  @Get('/site') // Specify the required roles for this route\n  async getSiteShed(@Res() response, @Req() request) {\n    try {\n      const jwt = request.headers.authorization.replace('Bearer ', '');\n      const json = this.jwtService.decode(jwt, { json: true });\n\n      const id = json['userId'];\n      const user = await this.userService.getUserById(id);\n      const shedData = await this.shedService.getShedBySite(user['site']);\n      return response.status(HttpStatus.OK).json({\n        message: 'Found Shed',\n        shedData,\n      });\n    } catch (err) {\n      return response.status(err.status).json(err.response);\n    }\n  }\n  @Get('/region')\n  @Roles('region-manager') // Specify the required roles for this route\n  @UseGuards(RolesGuard)\n  async getRegionShed(@Res() response, @Req() request) {\n    try {\n      const jwt = request.headers.authorization.replace('Bearer ', '');\n      const json = this.jwtService.decode(jwt, { json: true });\n      // json[\"\"]\n      const id = json['userId'];\n      const user = await this.userService.getUserById(id);\n      const shedData = await this.shedService.getShedByRegion(user['region']);\n      return response.status(HttpStatus.OK).json({\n        message: 'Found Shed',\n        shedData,\n      });\n    } catch (err) {\n      return response.status(err.status).json(err.response);\n    }\n  }\n  @Get('/:id')\n  @Roles('admin', 'shed-manager') // Specify the required roles for this route\n  @UseGuards(RolesGuard)\n  async getShedID(@Res() response, @Param('id') studentId: string) {\n    try {\n      const shedData = await this.shedService.getShedById(studentId);\n      return response.status(HttpStatus.OK).json({\n        message: 'Found Shed',\n        shedData,\n      });\n    } catch (err) {\n      return response.status(err.status).json(err.response);\n    }\n  }\n\n  @Put(':id')\n  @Roles('admin')\n  async updateShed(\n    @Param('id') id: string,\n    @Body() updateShedDto: UpdateShedDto,\n  ): Promise {\n    // Logic to update the shed\n    const updatedShed = await this.shedService.updateShed(id, updateShedDto);\n    return updatedShed;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShedModule.html":{"url":"modules/ShedModule.html","title":"module - ShedModule","body":"\n                   \n\n\n\n\n    Modules\n    ShedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShedModule\n\n\n\ncluster_ShedModule_providers\n\n\n\ncluster_ShedModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nShedModule\n\nShedModule\n\nShedModule -->\n\nAuthModule->ShedModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nShedModule -->\n\nUsersModule->ShedModule\n\n\n\n\n\nShedService\n\nShedService\n\nShedModule -->\n\nShedService->ShedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shed/shed.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ShedService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ShedController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ShedController } from './shed.controller';\nimport { ShedService } from './shed.service';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { shedSchema } from './shedSchema';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  imports:[MongooseModule.forFeature([{ name: 'Shed', schema: shedSchema}]),AuthModule,UsersModule],\n\n  controllers: [ShedController],\n  providers: [ShedService]\n})\nexport class ShedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShedService.html":{"url":"injectables/ShedService.html","title":"injectable - ShedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shed/shed.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteShed\n                            \n                            \n                                    Async\n                                getAllSheds\n                            \n                            \n                                    Async\n                                getShedById\n                            \n                            \n                                    Async\n                                getShedByRegion\n                            \n                            \n                                    Async\n                                getShedBySite\n                            \n                            \n                                    Async\n                                updateShed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(shedModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/shed/shed.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shedModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createShedDto: CreateShedDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shed/shed.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createShedDto\n                                    \n                                                CreateShedDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteShed\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteShed(shedId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shed/shed.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shedId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllSheds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllSheds()\n                \n            \n\n\n            \n                \n                    Defined in src/shed/shed.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getShedById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getShedById(shedId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shed/shed.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shedId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getShedByRegion\n                        \n                    \n                \n            \n            \n                \n                    \n                    getShedByRegion(regionnum: number)\n                \n            \n\n\n            \n                \n                    Defined in src/shed/shed.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    regionnum\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getShedBySite\n                        \n                    \n                \n            \n            \n                \n                    \n                    getShedBySite(sitenum: number)\n                \n            \n\n\n            \n                \n                    Defined in src/shed/shed.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sitenum\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateShed\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateShed(shedId: string, updateShedDto: UpdateShedDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shed/shed.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shedId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateShedDto\n                                    \n                                                UpdateShedDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { AuthService } from 'src/auth/auth.service';\nimport { CreateShedDto } from './dto/create-shed.dto';\nimport { Shed, ShedDocument } from './interface/shed.interface';\nimport { UpdateShedDto } from './dto/update-shed.dto';\n\n@Injectable()\nexport class ShedService {\n  constructor(\n    @InjectModel('Shed') private readonly shedModel: Model,\n  ) {}\n\n  async create(createShedDto: CreateShedDto): Promise {\n    try {\n      const createdShed = new this.shedModel(createShedDto);\n      return createdShed.save();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async deleteShed(shedId: string): Promise {\n    try {\n      const deletedShed = await this.shedModel.findByIdAndDelete(shedId).exec();\n      if (!deletedShed) {\n        throw new NotFoundException('Shed not found');\n      }\n      return deletedShed;\n    } catch (error) {\n      throw new NotFoundException('shed not found');\n      return error;\n    }\n  }\n  async getShedById(shedId: string): Promise {\n    const shed = await this.shedModel.findById(shedId).exec();\n    if (!shed) {\n      throw new NotFoundException('Shed not found');\n    }\n    return shed;\n  }\n  async getShedBySite(sitenum: number): Promise {\n    const shed = await this.shedModel.find({ site: sitenum }).exec();\n    if (!shed) {\n      throw new NotFoundException('Site not found');\n    }\n    return shed;\n  }  \n  async getShedByRegion(regionnum: number): Promise {\n    const shed = await this.shedModel.find({ region: regionnum}).exec();\n    if (!shed) {\n      throw new NotFoundException('Region not found');\n    }\n    return shed;\n  }\n\n  async getAllSheds(): Promise {\n    return this.shedModel.find().exec();\n  }\n\n\n  async updateShed(\n    shedId: string,\n    updateShedDto: UpdateShedDto,\n  ): Promise {\n    console.log(updateShedDto);\n    // updateShedDto['role'] = '';\n    const updatedShed = await this.shedModel.findByIdAndUpdate(\n      shedId,\n      updateShedDto,\n      { new: true },\n    );\n\n    if (updatedShed) {\n      return updatedShed;\n    } else {\n      throw new NotFoundException('Shed not found');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/transactionSchema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                overseerID\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                site\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                transactionType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/transactionSchema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/transactionSchema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        overseerID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/transactionSchema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/transactionSchema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        site\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/transactionSchema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/transactionSchema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        transactionType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/transactionSchema.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n@Schema()\nexport class Transaction{\n  @Prop()\n  transactionType: string;\n  @Prop()\n  title: string;\n  @Prop()\n  description: string;\n  @Prop()\n  amount: number;\n  @Prop()\n  overseerID: string;\n  @Prop()\n  site: number;\n  @Prop()\n  region: number;\n}\n\nexport const transactionSchema = SchemaFactory.createForClass(Transaction);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TransactionController.html":{"url":"controllers/TransactionController.html","title":"controller - TransactionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TransactionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/transaction.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                transaction\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createTransaction\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                deleteStudent\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getTransactionID\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createTransaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransaction(response, createTransactionDto: CreateTransactionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/transaction/transaction.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createTransactionDto\n                                    \n                                                CreateTransactionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        deleteStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteStudent(response, transactionId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@Roles('admin')@UseGuards(RolesGuard)\n                \n            \n\n            \n                \n                    Defined in src/transaction/transaction.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    transactionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/all')@Roles('admin', 'accountant')@UseGuards(RolesGuard)\n                \n            \n\n            \n                \n                    Defined in src/transaction/transaction.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getTransactionID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTransactionID(response, transactionId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@Roles('admin', 'shed-manager')@UseGuards(RolesGuard)\n                \n            \n\n            \n                \n                    Defined in src/transaction/transaction.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    transactionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateTransaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTransaction(id: string, updateTransactionDto: UpdateTransactionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/transaction/transaction.controller.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTransactionDto\n                                    \n                                                UpdateTransactionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Post, Put, Res, UseGuards } from '@nestjs/common';\nimport { AuthService } from 'src/auth/auth.service';\nimport { TransactionService } from './transaction.service';\nimport { CreateTransactionDto } from './dto/create-transaction.dto';\nimport { Roles } from 'src/common/decorators/roles.decorator';\nimport { RolesGuard } from 'src/common/gaurds/roles.guard';\nimport { UpdateTransactionDto } from './dto/update-transaction.dto';\n\n@Controller('transaction')\nexport class TransactionController {\n    constructor(\n        private readonly transactionService: TransactionService,\n        private readonly authService: AuthService,\n      ) {}\n//create transaction\n@Post()\nasync createTransaction(@Res() response, @Body() createTransactionDto: CreateTransactionDto) {\n    try {\n      const newTransaction = await this.transactionService.create(createTransactionDto);\n      return response.status(HttpStatus.CREATED).json({\n        message: 'transaction has been created successfully',\n        newTransaction,\n      });\n    } catch (err) {\n      return response.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: 400,\n        message: 'Error: transaction not created!',\n        error: err,\n      });\n    }\n  }\n  //delete transaction\n  @Delete('/:id')\n  @Roles('admin') \n  @UseGuards(RolesGuard)\n  async deleteStudent(@Res() response, @Param('id') transactionId: string) {\n    try {\n      const deletedTransaction = await this.transactionService.deleteTransaction(transactionId);\n      return response.status(HttpStatus.OK).json({\n        message: 'Transaction deleted successfully',\n        deletedTransaction,\n      });\n    } catch (err) {\n      return response.status(err.status).json(err.response);\n    }\n  }\n\n//get all transactionsroute\n@Get('/all')\n@Roles('admin','accountant') // Specify the required roles for this route\n@UseGuards(RolesGuard)\nasync getAll(@Res() response) {\n  try {\n    const transactionData = await this.transactionService.getAllTransactions();\n    return response.status(HttpStatus.OK).json({\n      message: 'All Transaction data found successfully',\n      transactionData,\n    });\n  } catch (err) {\n    return response.status(err.status).json(err.response);\n  }\n}\n@Get('/:id')\n@Roles('admin',\"shed-manager\") // Specify the required roles for this route\n@UseGuards(RolesGuard)\nasync getTransactionID(@Res() response, @Param('id') transactionId: string) {\n  try {\n    const transactionData = await this.transactionService.getTransactionById(transactionId);\n    return response.status(HttpStatus.OK).json({\n      message: 'Found Transaction',\n      transactionData,\n    });\n  } catch (err) {\n    return response.status(err.status).json(err.response);\n  }\n}\n@Put(':id')\n@Roles('admin')\nasync updateTransaction(@Param('id') id: string, @Body() updateTransactionDto: UpdateTransactionDto): Promise {\n  // Logic to update the transaction\n  const updatedTransaction = await this.transactionService.updateTransaction(id, updateTransactionDto);\n  return updatedTransaction;\n}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionModule.html":{"url":"modules/TransactionModule.html","title":"module - TransactionModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_imports\n\n\n\ncluster_TransactionModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nTransactionModule\n\nTransactionModule\n\nTransactionModule -->\n\nAuthModule->TransactionModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/transaction/transaction.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TransactionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TransactionController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TransactionController } from './transaction.controller';\nimport { TransactionService } from './transaction.service';\nimport { transactionSchema } from './transactionSchema';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  imports:[MongooseModule.forFeature([{ name: 'Transaction', schema: transactionSchema}]),AuthModule],\n  controllers: [TransactionController],\n  providers: [TransactionService]\n})\nexport class TransactionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionService.html":{"url":"injectables/TransactionService.html","title":"injectable - TransactionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/transaction.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteTransaction\n                            \n                            \n                                    Async\n                                getAllTransactions\n                            \n                            \n                                    Async\n                                getTransactionById\n                            \n                            \n                                    Async\n                                updateTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionModel: Model, AuthService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/transaction/transaction.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        AuthService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTransactionDto: CreateTransactionDto)\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTransactionDto\n                                    \n                                                CreateTransactionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteTransaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTransaction(transactionId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transactionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllTransactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTransactions()\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTransactionById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTransactionById(transactionId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transactionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTransaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTransaction(transactionId: string, updateTransactionDto: UpdateTransactionDto)\n                \n            \n\n\n            \n                \n                    Defined in src/transaction/transaction.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transactionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTransactionDto\n                                    \n                                                UpdateTransactionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { AuthService } from 'src/auth/auth.service';\nimport { CreateTransactionDto } from './dto/create-transaction.dto';\nimport { Transaction, TransactionDocument } from './interface/transaction.interface';\nimport { UpdateTransactionDto } from './dto/update-transaction.dto';\n\n\n@Injectable()\nexport class TransactionService {\n    constructor(\n        @InjectModel('Transaction') private readonly transactionModel: Model,\n        private AuthService: AuthService,\n      ) {}\n\n    async create(createTransactionDto: CreateTransactionDto): Promise {\n        try {\n          const createdTransaction = new this.transactionModel(createTransactionDto);\n          return createdTransaction.save();\n        } catch (error) {\n          console.log(error);\n        }\n      }\n      \n      async deleteTransaction(transactionId: string): Promise {\n        const deletedTransaction = await this.transactionModel.findByIdAndDelete(transactionId).exec();\n        if (!deletedTransaction) {\n          throw new NotFoundException('Transaction not found');\n        }\n        return deletedTransaction;\n      }\n      async getTransactionById(transactionId: string): Promise {\n        const transaction = await this.transactionModel.findById(transactionId).exec();\n        if (!transaction) {\n          throw new NotFoundException('Transaction not found');\n        }\n        return transaction;\n      }\n    \n      async getAllTransactions(): Promise {\n        return this.transactionModel.find().exec();\n      }\n      async updateTransaction(\n        transactionId: string,\n        updateTransactionDto: UpdateTransactionDto,\n      ): Promise {\n        console.log(updateTransactionDto);\n        // updateTransactionDto['role'] = '';\n        const updatedTransaction = await this.transactionModel.findByIdAndUpdate(\n          transactionId,\n          updateTransactionDto,\n          { new: true },\n        );\n    \n        if (updatedTransaction) {\n          return updatedTransaction;\n        } else {\n          throw new NotFoundException('Transaction not found');\n        }\n      }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateShedDto.html":{"url":"classes/UpdateShedDto.html","title":"class - UpdateShedDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateShedDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shed/dto/update-shed.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNumber, IsString, MinLength } from 'class-validator';\nimport { CreateShedDto } from './create-shed.dto';\nimport { PartialType } from '@nestjs/mapped-types';\nimport { OmitType } from '@nestjs/swagger';\n\nexport class UpdateShedDto extends PartialType(CreateShedDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTransactionDto.html":{"url":"classes/UpdateTransactionDto.html","title":"class - UpdateTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/dto/update-transaction.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNumber, IsString, MinLength } from 'class-validator';\nimport { CreateTransactionDto } from './create-transaction.dto';\nimport { PartialType } from '@nestjs/mapped-types';\nimport { OmitType } from '@nestjs/swagger';\n\nexport class UpdateTransactionDto extends PartialType(CreateTransactionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNumber, IsString, MinLength } from 'class-validator';\nimport { CreateUserDto } from './create-user.dto';\nimport { PartialType } from '@nestjs/mapped-types';\nimport { OmitType } from '@nestjs/swagger';\n\nexport class UpdateUserDto extends PartialType(\n  OmitType(CreateUserDto, ['role'] as const),\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/userSchema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                site\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/userSchema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/userSchema.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/userSchema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/userSchema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/userSchema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/userSchema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/userSchema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        site\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/userSchema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n@Schema()\nexport class User{\n  @Prop()\n  firstName: string;\n  @Prop()\n  email: string;\n  @Prop()\n  lastName: string;\n  @Prop()\n  phoneNumber: number;\n  @Prop()\n  role: string;\n  @Prop()\n  site: number;\n  @Prop()\n  region: number;\n  @Prop()\n  password: string;\n}\n\nexport const userSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteStudent\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getRegionUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getSiteUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getUserID\n                            \n                            \n                                    \n                                    Async\n                                loginUser\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(response, createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteStudent(response, studentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    studentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/all')@Roles('admin')@UseGuards(RolesGuard)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getRegionUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRegionUsers(response, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/region')@Roles('region-manager')@UseGuards(RolesGuard)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getSiteUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSiteUsers(response, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/site')@Roles('site-manager')@UseGuards(RolesGuard)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getUserID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserID(response, studentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@Roles('shed-manager')@UseGuards(RolesGuard)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    studentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        loginUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginUser(response, loginUserDto: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Res,\n  Post,\n  Req,\n  UseGuards,\n  UnauthorizedException,\n  Param,\n  Delete,\n  Put,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { LoginUserDto } from './dto/login-user.dto';\nimport { AuthService } from 'src/auth/auth.service';\nimport { RolesGuard } from 'src/common/gaurds/roles.guard';\nimport { Roles } from 'src/common/decorators/roles.decorator';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { UUID } from 'crypto';\n@Controller('user')\nexport class UsersController {\n  constructor(\n    private readonly userService: UsersService,\n    private readonly authService: AuthService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  @Post()\n  async createUser(@Res() response, @Body() createUserDto: CreateUserDto) {\n    try {\n      const newUser = await this.userService.create(createUserDto);\n      return response.status(HttpStatus.CREATED).json({\n        message: 'User has been created successfully',\n        newUser,\n      });\n    } catch (err) {\n      return response.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: 400,\n        message: 'Error: User not created!',\n        error: err,\n      });\n    }\n  }\n\n  //login\n  @Post('login')\n  async loginUser(@Res() response, @Body() loginUserDto: LoginUserDto) {\n    // check if emailexists , if yes fetch user\n    // check passwords,\n    // generate token , add role and something in the payload\n    const { email, password } = loginUserDto;\n    try {\n      const user = await this.userService.validateUser(email, password);\n      if (!user) {\n        throw new UnauthorizedException('Invalid credentials');\n      }\n      const token = await this.authService.generateToken(user);\n      console.log(token);\n      return response.status(HttpStatus.CREATED).json({\n        message: 'User has been succesfully logged in',\n        token,\n      });\n    } catch (err) {\n      return response.json({\n        err,\n      });\n    }\n  }\n\n  //get all users\n  @Get('/all')\n  @Roles('admin') // Specify the required roles for this route\n  @UseGuards(RolesGuard)\n  async getAll(@Res() response) {\n    try {\n      const userData = await this.userService.getAllUsers();\n      return response.status(HttpStatus.OK).json({\n        message: 'All User data found successfully',\n        userData,\n      });\n    } catch (err) {\n      return response.status(err.status).json(err.response);\n    }\n  }\n  //site\n  @Get('/site') \n  @Roles('site-manager')\n  @UseGuards(RolesGuard)\n  async getSiteUsers(@Res() response, @Req() request) {\n    try {\n      const jwt = request.headers.authorization.replace('Bearer ', '');\n      const json = this.jwtService.decode(jwt, { json: true });\n      // json[\"\"]\n      const id = json['userId'];\n      const user = await this.userService.getUserById(id);\n      // console.log(user);\n      const userData = await this.userService.getSiteUser(user['site']);\n      return response.status(HttpStatus.OK).json({\n        message: 'Site User data found successfully',\n        userData,\n      });\n    } catch (err) {\n      return response.status(err.status).json(err.response);\n    }\n  }\n  @Get('/region')\n  @Roles('region-manager') // Specify the required roles for this route\n  @UseGuards(RolesGuard)\n  async getRegionUsers(@Res() response, @Req() request) {\n    try {\n      const jwt = request.headers.authorization.replace('Bearer ', '');\n      const json = this.jwtService.decode(jwt, { json: true });\n      // json[\"\"]\n      const id = json['userId'];\n      const user = await this.userService.getUserById(id);\n      const userData = await this.userService.getRegionUser(user['region']);\n\n      return response.status(HttpStatus.OK).json({\n        message: 'Region User data found successfully',\n        userData,\n      });\n    } catch (err) {\n      return response.status(err.status).json(err.response);\n    }\n  }\n  @Get('/:id')\n  @Roles('shed-manager') // Specify the required roles for this route\n  @UseGuards(RolesGuard)\n  async getUserID(@Res() response, @Param('id') studentId: string) {\n    try {\n      const userData = await this.userService.getUserById(studentId);\n      return response.status(HttpStatus.OK).json({\n        message: 'Found User',\n        userData,\n      });\n    } catch (err) {\n      return response.status(err.status).json(err.response);\n    }\n  }\n\n  @Delete('/:id')\n  @Roles('admin')\n  async deleteStudent(@Res() response, @Param('id') studentId: string) {\n    try {\n      const deletedUser = await this.userService.deleteUser(studentId);\n      return response.status(HttpStatus.OK).json({\n        message: 'User deleted successfully',\n        deletedUser,\n      });\n    } catch (err) {\n      return response.status(err.status).json(err.response);\n    }\n  }\n  @Put(':id')\n  @Roles('admin')\n  async updateUser(\n    @Param('id') id: string,\n    @Body() updateUserDto: UpdateUserDto,\n  ): Promise {\n    // Logic to update the user\n    const updatedUser = await this.userService.updateUser(id, updateUserDto);\n    return updatedUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAuthModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUsersModule -->\n\nJwtStrategy->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { userSchema } from './userSchema';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { RolesGuard } from 'src/common/gaurds/roles.guard';\nimport { APP_GUARD } from '@nestjs/core';\nimport { JwtStrategy } from 'src/auth/jwt.strategy';\n@Module({\n  imports:[MongooseModule.forFeature([{ name: 'User', schema: userSchema }]),AuthModule],\n  controllers: [UsersController],\n  providers: [UsersService,  {\n    provide: APP_GUARD,\n    useClass: RolesGuard,\n  },\n  JwtStrategy,],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getRegionUser\n                            \n                            \n                                    Async\n                                getSiteUser\n                            \n                            \n                                    Async\n                                getUserByEmail\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, AuthService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        AuthService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRegionUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRegionUser(num: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSiteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSiteUser(num: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(userId: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { User, UserDocument } from './interface/user.interface';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { AuthService } from 'src/auth/auth.service';\nimport { UpdateUserDto } from './dto/update-user.dto';\nconst bcrypt = require('bcrypt');\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel('User') private readonly userModel: Model,\n    private AuthService: AuthService,\n  ) {}\n\n  async create(createUserDto: CreateUserDto): Promise {\n    try {\n      const createdUser = new this.userModel(createUserDto);\n      // createdUser.password= await bcrypt.hash(createUserDto.password, 12)\n      return createdUser.save();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async validateUser(email: string, password: string): Promise {\n    const user = await this.getUserByEmail(email);\n    if (!user) return null;\n    else {\n      console.log(user.password);\n      if (password == user.password) return user;\n      else return null;\n    }\n  }\n\n  async getUserById(userId: string): Promise {\n    const user = await this.userModel.findById(userId).exec();\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return user;\n  }\n  async getRegionUser(num: number): Promise {\n    const user = await this.userModel.find({ region: num }).exec();\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return user;\n  }\n  async getSiteUser(num: number): Promise {\n    const user = await this.userModel.find({ site: num }).exec();\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return user;\n  }\n\n  async getAllUsers(): Promise {\n    return this.userModel.find().exec();\n  }\n\n  async getUserByEmail(email: string): Promise {\n    const user = await this.userModel.findOne({ email }).exec();\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return user;\n  }\n\n  async deleteUser(userId: string): Promise {\n    const deletedUser = await this.userModel.findByIdAndDelete(userId).exec();\n    if (!deletedUser) {\n      throw new NotFoundException('User not found');\n    }\n    return deletedUser;\n  }\n  async updateUser(\n    userId: string,\n    updateUserDto: UpdateUserDto,\n  ): Promise {\n    console.log(updateUserDto);\n    // updateUserDto['role'] = '';\n    const updatedUser = await this.userModel.findByIdAndUpdate(\n      userId,\n      updateUserDto,\n      { new: true },\n    );\n\n    if (updatedUser) {\n      return updatedUser;\n    } else {\n      throw new NotFoundException('User not found');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt-payload.interface.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/gaurds/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shed/dto/create-shed.dto.ts\n            \n            class\n            CreateShedDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shed/dto/update-shed.dto.ts\n            \n            class\n            UpdateShedDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shed/interface/shed.interface.ts\n            \n            interface\n            Shed\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shed/shed.controller.ts\n            \n            controller\n            ShedController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/shed/shed.service.ts\n            \n            injectable\n            ShedService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/shed/shedSchema.ts\n            \n            class\n            Shed\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shed/shedSchema.ts\n            \n            variable\n            shedSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/transaction/dto/create-transaction.dto.ts\n            \n            class\n            CreateTransactionDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/transaction/dto/update-transaction.dto.ts\n            \n            class\n            UpdateTransactionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/transaction/interface/transaction.interface.ts\n            \n            interface\n            Transaction\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/transaction/transaction.controller.ts\n            \n            controller\n            TransactionController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/transaction/transaction.service.ts\n            \n            injectable\n            TransactionService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/transaction/transactionSchema.ts\n            \n            class\n            Transaction\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/transaction/transactionSchema.ts\n            \n            variable\n            transactionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/interface/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/userSchema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/userSchema.ts\n            \n            variable\n            userSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/mapped-types : ^1.2.2\n        \n            @nestjs/mongoose : ^9.2.2\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.3.0\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ShedModule\n\n\n\ncluster_ShedModule_providers\n\n\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nShedModule\n\nShedModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nShedModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nShedModule -->\n\nUsersModule->ShedModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nShedModule -->\n\nAuthModule->ShedModule\n\n\n\nTransactionModule -->\n\nAuthModule->TransactionModule\n\n\n\nUsersModule -->\n\nAuthModule->UsersModule\n\n\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUsersModule -->\n\nJwtStrategy->UsersModule\n\n\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nShedService\n\nShedService\n\nShedModule -->\n\nShedService->ShedModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ShedDocument   (src/.../shed.interface.ts)\n                        \n                        \n                            TransactionDocument   (src/.../transaction.interface.ts)\n                        \n                        \n                            UserDocument   (src/.../user.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shed/interface/shed.interface.ts\n    \n    \n        \n            \n                \n                    \n                    ShedDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/transaction/interface/transaction.interface.ts\n    \n    \n        \n            \n                \n                    \n                    TransactionDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/users/interface/user.interface.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bcrypt   (src/.../users.service.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            shedSchema   (src/.../shedSchema.ts)\n                        \n                        \n                            transactionSchema   (src/.../transactionSchema.ts)\n                        \n                        \n                            userSchema   (src/.../userSchema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcrypt')\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: string[]) => SetMetadata('roles', roles)\n                    \n                \n\n\n        \n    \n\n    src/shed/shedSchema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        shedSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Shed)\n                    \n                \n\n\n        \n    \n\n    src/transaction/transactionSchema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        transactionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Transaction)\n                    \n                \n\n\n        \n    \n\n    src/users/userSchema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
